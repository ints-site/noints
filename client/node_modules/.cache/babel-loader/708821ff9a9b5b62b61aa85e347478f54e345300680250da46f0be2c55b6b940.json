{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FanYukin\\\\codes\\\\f\\\\noints\\\\client\\\\src\\\\components\\\\Editor\\\\NoteEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditor = ({\n  onThemeChange\n}) => {\n  _s();\n  var _currentNote;\n  // 使用 useMemo 优化编辑器创建\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n\n  // 初始化编辑器内容\n  const [value, setValue] = useState([{\n    type: 'paragraph',\n    children: [{\n      text: ''\n    }]\n  }]);\n\n  // 自动保存钩子\n  useAutoSave(((_currentNote = currentNote) === null || _currentNote === void 0 ? void 0 : _currentNote.id) || null, value, 2000, () => console.log('Note saved'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      onThemeChange: onThemeChange\n      // 添加更多工具栏功能\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slate, {\n      editor: editor,\n      value: value,\n      onChange: newValue => setValue(newValue),\n      children: /*#__PURE__*/_jsxDEV(Editable, {\n        renderElement: renderElement,\n        renderLeaf: renderLeaf,\n        placeholder: \"\\u5F00\\u59CB\\u4F60\\u7684\\u7B14\\u8BB0...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteEditor, \"KjSzQt8AUm2dCPkFej83baPG60Q=\", false, function () {\n  return [useAutoSave];\n});\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useMemo","useState","createEditor","Slate","Editable","withReact","withHistory","useAutoSave","Toolbar","jsxDEV","_jsxDEV","NoteEditor","onThemeChange","_s","_currentNote","editor","value","setValue","type","children","text","currentNote","id","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","newValue","renderElement","renderLeaf","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/components/Editor/NoteEditor.tsx"],"sourcesContent":["import React, { useMemo, useState, useCallback } from 'react';\nimport { createEditor } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { CustomElement, CustomText } from './types';\n\ninterface EditorProps {\n  onThemeChange?: (isDark: boolean) => void;\n}\n\nconst NoteEditor: React.FC<EditorProps> = ({ onThemeChange }) => {\n  // 使用 useMemo 优化编辑器创建\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n  \n  // 初始化编辑器内容\n  const [value, setValue] = useState<CustomElement[]>([\n    { type: 'paragraph', children: [{ text: '' }] },\n  ]);\n\n  // 自动保存钩子\n  useAutoSave(\n    currentNote?.id || null, \n    value, \n    2000, \n    () => console.log('Note saved')\n  );\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <Toolbar \n        onThemeChange={onThemeChange}\n        // 添加更多工具栏功能\n      />\n      <Slate \n        editor={editor} \n        value={value} \n        onChange={newValue => setValue(newValue)}\n      >\n        <Editable \n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"开始你的笔记...\"\n        />\n      </Slate>\n    </div>\n  );\n};\n\nexport default NoteEditor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,QAAQ,QAAqB,OAAO;AAC7D,SAASC,YAAY,QAAQ,OAAO;AACpC,SAASC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,aAAa;AACxD,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOhC,MAAMC,UAAiC,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,YAAA;EAC/D;EACA,MAAMC,MAAM,GAAGf,OAAO,CAAC,MAAMM,WAAW,CAACD,SAAS,CAACH,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;;EAExE;EACA,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAkB,CAClD;IAAEiB,IAAI,EAAE,WAAW;IAAEC,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAG,CAAC;EAAE,CAAC,CAChD,CAAC;;EAEF;EACAb,WAAW,CACT,EAAAO,YAAA,GAAAO,WAAW,cAAAP,YAAA,uBAAXA,YAAA,CAAaQ,EAAE,KAAI,IAAI,EACvBN,KAAK,EACL,IAAI,EACJ,MAAMO,OAAO,CAACC,GAAG,CAAC,YAAY,CAChC,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,sBAAsB;IAAAN,QAAA,gBACnCT,OAAA,CAACF,OAAO;MACNI,aAAa,EAAEA;MACf;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACFnB,OAAA,CAACP,KAAK;MACJY,MAAM,EAAEA,MAAO;MACfC,KAAK,EAAEA,KAAM;MACbc,QAAQ,EAAEC,QAAQ,IAAId,QAAQ,CAACc,QAAQ,CAAE;MAAAZ,QAAA,eAEzCT,OAAA,CAACN,QAAQ;QACP4B,aAAa,EAAEA,aAAc;QAC7BC,UAAU,EAAEA,UAAW;QACvBC,WAAW,EAAC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCIF,UAAiC;EAAA,QAUrCJ,WAAW;AAAA;AAAA4B,EAAA,GAVPxB,UAAiC;AAsCvC,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}