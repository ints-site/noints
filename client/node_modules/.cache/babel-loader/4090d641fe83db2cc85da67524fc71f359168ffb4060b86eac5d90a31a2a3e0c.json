{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FanYukin\\\\codes\\\\f\\\\noints\\\\client\\\\src\\\\components\\\\Editor\\\\NoteEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport { createEditor, Editor, Element as SlateElement, Node as SlateNode, Transforms } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { findAndReplace } from '../../utils/textOperations';\nimport { Node } from 'slate';\nimport { updateNoteContent } from '../../store/notebookSlice';\nimport { Table, TableRow, TableCell } from './elements/Table';\nimport { calculateNoteStats } from '../../utils/noteStats';\n\n// 添加类型定义\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditor = ({\n  onThemeChange\n}) => {\n  _s();\n  const dispatch = useDispatch();\n\n  // 获取当前笔记\n  const currentNote = useSelector(state => state.notebooks.currentNote);\n\n  // 修改 editor 的创建方式\n  const editor = useMemo(() => {\n    const e = withHistory(withReact(createEditor()));\n\n    // 添加自定义的 normalizeNode 处理\n    const {\n      normalizeNode\n    } = e;\n    e.normalizeNode = ([node, path]) => {\n      if (path.length === 0) {\n        // 确保文档至少有一个段落\n        if (SlateElement.isElement(node)) {\n          if (node.children.length === 0) {\n            const paragraph = {\n              type: 'paragraph',\n              children: [{\n                text: ''\n              }]\n            };\n            Transforms.insertNodes(e, paragraph, {\n              at: [0]\n            });\n            return;\n          }\n\n          // 确保第一个节点是段落\n          const firstChild = node.children[0];\n          if (!SlateElement.isElement(firstChild) || !('type' in firstChild) || firstChild.type !== 'paragraph') {\n            const paragraph = {\n              type: 'paragraph',\n              children: [{\n                text: ''\n              }]\n            };\n            Transforms.insertNodes(e, paragraph, {\n              at: [0]\n            });\n            return;\n          }\n        }\n      }\n\n      // 调用原始的 normalizeNode\n      normalizeNode([node, path]);\n    };\n\n    // 添加自定义的 isInline 处理\n    const {\n      isInline\n    } = e;\n    e.isInline = element => {\n      return isInline(element);\n    };\n\n    // 添加自定义的 isVoid 处理\n    const {\n      isVoid\n    } = e;\n    e.isVoid = element => {\n      return isVoid(element);\n    };\n    return e;\n  }, []);\n\n  // 修改 value 的初始化和更新\n  const [value, setValue] = useState(() => {\n    const initialValue = (currentNote === null || currentNote === void 0 ? void 0 : currentNote.content) || [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n\n    // 确保内容有效\n    return Array.isArray(initialValue) && initialValue.length > 0 ? initialValue : [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n  });\n\n  // 修改 handleChange 函数\n  const handleChange = useCallback(newValue => {\n    try {\n      // 验证新值的有效性\n      if (!Array.isArray(newValue)) {\n        console.warn('Invalid editor value:', newValue);\n        return;\n      }\n\n      // 确保至少有一个段落\n      if (newValue.length === 0) {\n        newValue = [{\n          type: 'paragraph',\n          children: [{\n            text: ''\n          }]\n        }];\n      }\n      setValue(newValue);\n    } catch (error) {\n      console.error('Error in handleChange:', error);\n    }\n  }, []);\n\n  // 切换块类型\n  const toggleBlock = format => {\n    const isActive = isBlockActive(format);\n    const isList = ['numbered-list', 'bulleted-list'].includes(format);\n    Transforms.unwrapNodes(editor, {\n      match: n => SlateElement.isElement(n) && ['numbered-list', 'bulleted-list'].includes(n.type),\n      split: true\n    });\n    if (!isActive && isList) {\n      const block = format === 'numbered-list' ? {\n        type: 'numbered-list',\n        children: []\n      } : {\n        type: 'bulleted-list',\n        children: []\n      };\n      Transforms.wrapNodes(editor, block);\n    } else {\n      const newProperties = {\n        type: isActive ? 'paragraph' : format\n      };\n      Transforms.setNodes(editor, newProperties);\n    }\n  };\n\n  // 检查块类型是否激活\n  const isBlockActive = format => {\n    const [match] = Array.from(Editor.nodes(editor, {\n      match: n => SlateElement.isElement(n) && n.type === format\n    }));\n    return !!match;\n  };\n\n  // 渲染元素和叶子节点的回调函数\n  const renderElement = useCallback(props => {\n    const {\n      element,\n      attributes,\n      children\n    } = props;\n    switch (element.type) {\n      case 'paragraph':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 16\n        }, this);\n      case 'bulleted-list':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 16\n        }, this);\n      case 'numbered-list':\n        return /*#__PURE__*/_jsxDEV(\"ol\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 16\n        }, this);\n      case 'list-item':\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 16\n        }, this);\n      case 'table':\n        return /*#__PURE__*/_jsxDEV(Table, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 16\n        }, this);\n      case 'table-row':\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 16\n        }, this);\n      case 'table-cell':\n        return /*#__PURE__*/_jsxDEV(TableCell, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }, this);\n    }\n  }, []);\n  const renderLeaf = useCallback(props => {\n    let style = {};\n    if (props.leaf.bold) style.fontWeight = 'bold';\n    if (props.leaf.italic) style.fontStyle = 'italic';\n    if (props.leaf.underline) style.textDecoration = 'underline';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      ...props.attributes,\n      style: style,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }, []);\n\n  // 导出功能\n  const handleExport = useCallback(format => {\n    const text = value.map(n => SlateNode.string(n)).join('\\n');\n    const blob = new Blob([text], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    a.download = `note-${timestamp}.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [value]);\n\n  // 自动保存钩子\n  useAutoSave((currentNote === null || currentNote === void 0 ? void 0 : currentNote.id) || null, value, 2000, () => console.log('Note saved'));\n  const [searchQuery, setSearchQuery] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [showFindReplace, setShowFindReplace] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n\n  // Add hotkey support\n  useHotkeys('ctrl+f', e => {\n    e.preventDefault();\n    setShowFindReplace(true);\n  });\n  useHotkeys('ctrl+s', e => {\n    e.preventDefault();\n    handleSave();\n  });\n\n  // Add status bar calculations\n  useEffect(() => {\n    const text = value.map(n => Node.string(n)).join('\\n');\n    setWordCount(text.trim().split(/\\s+/).length);\n    setLineCount(value.length);\n  }, [value]);\n\n  // Add find and replace functionality\n  const handleFindReplace = () => {\n    findAndReplace(editor, searchQuery, replaceText);\n  };\n  const handleSave = useCallback(() => {\n    if (currentNote !== null && currentNote !== void 0 && currentNote.id) {\n      // 使用 useAutoSave 中的逻辑直接保存\n      dispatch(updateNoteContent({\n        id: currentNote.id,\n        content: value\n      }));\n      console.log('Note saved manually');\n    }\n  }, [currentNote === null || currentNote === void 0 ? void 0 : currentNote.id, value]);\n\n  // 添加新的状态\n  const [fontSize, setFontSize] = useState(16);\n  const [fontFamily, setFontFamily] = useState('Arial');\n  const [noteStats, setNoteStats] = useState({\n    wordCount: 0,\n    characterCount: 0,\n    readingTime: 0,\n    codeBlockCount: 0,\n    tableCount: 0,\n    lastModified: new Date()\n  });\n\n  // Update statistics when content changes\n  useEffect(() => {\n    // 过滤出 CustomElement 类型的节点\n    const elements = value.filter(node => 'type' in node && typeof node.type === 'string');\n    const stats = calculateNoteStats(elements);\n    setNoteStats(stats);\n  }, [value]);\n\n  // Add toolbar buttons for code block and table\n  const insertTable = (rows = 3, cols = 3) => {\n    const table = {\n      type: 'table',\n      rows,\n      columns: cols,\n      children: Array(rows).fill(0).map(() => ({\n        type: 'table-row',\n        children: Array(cols).fill(0).map(() => ({\n          type: 'table-cell',\n          children: [{\n            text: ''\n          }]\n        }))\n      }))\n    };\n    Transforms.insertNodes(editor, table);\n  };\n\n  // Add error boundary for content loading\n  useEffect(() => {\n    try {\n      if (currentNote !== null && currentNote !== void 0 && currentNote.content) {\n        const validContent = Array.isArray(currentNote.content) ? currentNote.content : [{\n          type: 'paragraph',\n          children: [{\n            text: ''\n          }]\n        }];\n        setValue(validContent);\n      }\n    } catch (error) {\n      console.error('Error loading note content:', error);\n      setValue([{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }]);\n    }\n  }, [currentNote]);\n\n  // Add support for more keyboard shortcuts\n  useHotkeys('ctrl+b', e => {\n    e.preventDefault();\n    Editor.addMark(editor, 'bold', true);\n  });\n  useHotkeys('ctrl+i', e => {\n    e.preventDefault();\n    Editor.addMark(editor, 'italic', true);\n  });\n  useHotkeys('ctrl+u', e => {\n    e.preventDefault();\n    Editor.addMark(editor, 'underline', true);\n  });\n\n  // Add paste handling\n  const handlePaste = useCallback(event => {\n    event.preventDefault();\n    const text = event.clipboardData.getData('text/plain');\n    const lines = text.split('\\n');\n    if (lines.length > 1) {\n      // Handle multi-line paste with proper typing\n      const nodes = lines.map(line => ({\n        type: 'paragraph',\n        children: [{\n          text: line\n        }]\n      }));\n      Editor.insertFragment(editor, nodes);\n    } else {\n      Editor.insertText(editor, text);\n    }\n  }, [editor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Slate, {\n      editor: editor,\n      value: value,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        editor: editor,\n        onThemeChange: onThemeChange,\n        onToggleBlock: toggleBlock,\n        isBlockActive: isBlockActive,\n        onExport: handleExport,\n        onFindReplace: () => setShowFindReplace(true),\n        fontSize: fontSize,\n        fontFamily: fontFamily,\n        onFontSizeChange: setFontSize,\n        onFontFamilyChange: setFontFamily,\n        currentSectionId: currentNote === null || currentNote === void 0 ? void 0 : currentNote.sectionId,\n        onInsertTable: insertTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), showFindReplace && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b p-2 flex gap-2 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Find...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"px-2 py-1 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Replace with...\",\n          value: replaceText,\n          onChange: e => setReplaceText(e.target.value),\n          className: \"px-2 py-1 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindReplace,\n          className: \"px-3 py-1 bg-blue-500 text-white rounded\",\n          children: \"Replace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFindReplace(false),\n          className: \"px-2 py-1\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Editable, {\n        renderElement: renderElement,\n        renderLeaf: renderLeaf,\n        placeholder: \"\\u5F00\\u59CB\\u4F60\\u7684\\u7B14\\u8BB0...\",\n        className: \"flex-1 p-4 overflow-auto prose max-w-none dark:prose-invert\",\n        style: {\n          fontSize: `${fontSize}px`,\n          fontFamily\n        },\n        onPaste: handlePaste,\n        spellCheck: false,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400 flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Lines: \", lineCount, \" | Words: \", wordCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Words: \", noteStats.wordCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Characters: \", noteStats.characterCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Reading Time: \", noteStats.readingTime, \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Code Blocks: \", noteStats.codeBlockCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Tables: \", noteStats.tableCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Last Modified: \", noteStats.lastModified.toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteEditor, \"qHQTMwGyS1V7zVx8qvMHuHhga4A=\", false, function () {\n  return [useDispatch, useSelector, useAutoSave, useHotkeys, useHotkeys, useHotkeys, useHotkeys, useHotkeys];\n});\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useMemo","useState","useCallback","useEffect","createEditor","Editor","Element","SlateElement","Node","SlateNode","Transforms","Slate","Editable","withReact","withHistory","useSelector","useDispatch","useAutoSave","Toolbar","useHotkeys","findAndReplace","updateNoteContent","Table","TableRow","TableCell","calculateNoteStats","jsxDEV","_jsxDEV","NoteEditor","onThemeChange","_s","dispatch","currentNote","state","notebooks","editor","e","normalizeNode","node","path","length","isElement","children","paragraph","type","text","insertNodes","at","firstChild","isInline","element","isVoid","value","setValue","initialValue","content","Array","isArray","handleChange","newValue","console","warn","error","toggleBlock","format","isActive","isBlockActive","isList","includes","unwrapNodes","match","n","split","block","wrapNodes","newProperties","setNodes","from","nodes","renderElement","props","attributes","fileName","_jsxFileName","lineNumber","columnNumber","renderLeaf","style","leaf","bold","fontWeight","italic","fontStyle","underline","textDecoration","handleExport","map","string","join","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","timestamp","Date","toISOString","replace","download","body","appendChild","click","removeChild","revokeObjectURL","id","log","searchQuery","setSearchQuery","replaceText","setReplaceText","showFindReplace","setShowFindReplace","wordCount","setWordCount","lineCount","setLineCount","preventDefault","handleSave","trim","handleFindReplace","fontSize","setFontSize","fontFamily","setFontFamily","noteStats","setNoteStats","characterCount","readingTime","codeBlockCount","tableCount","lastModified","elements","filter","stats","insertTable","rows","cols","table","columns","fill","validContent","addMark","handlePaste","event","clipboardData","getData","lines","line","insertFragment","insertText","className","onChange","onToggleBlock","onExport","onFindReplace","onFontSizeChange","onFontFamilyChange","currentSectionId","sectionId","onInsertTable","placeholder","target","onClick","onPaste","spellCheck","autoFocus","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/components/Editor/NoteEditor.tsx"],"sourcesContent":["import React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport { \n  createEditor, \n  Descendant, \n  Editor, \n  Element as SlateElement,\n  Node as SlateNode,\n  Transforms,\n  Text\n} from 'slate';\nimport { Slate, Editable, withReact, RenderLeafProps } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { CustomElement, CustomText, BlockFormatType, NoteStats, TableElement, TableRowElement, TableCellElement, CodeBlockElement, ListItemElement, ParagraphElement, CustomDescendant } from './types';\nimport { RootState } from '../../store';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { findAndReplace } from '../../utils/textOperations';\nimport { Node } from 'slate';\nimport { updateNoteContent } from '../../store/notebookSlice';\nimport { Table, TableRow, TableCell } from './elements/Table';\nimport { calculateNoteStats } from '../../utils/noteStats';\n\ninterface EditorProps {\n  onThemeChange?: (isDark: boolean) => void;\n}\n\n// 添加类型定义\ninterface KeyboardEvent {\n  preventDefault: () => void;\n}\n\nconst NoteEditor: React.FC<EditorProps> = ({ onThemeChange }) => {\n  const dispatch = useDispatch();\n\n  // 获取当前笔记\n  const currentNote = useSelector((state: RootState) => state.notebooks.currentNote);\n\n  // 修改 editor 的创建方式\n  const editor = useMemo(() => {\n    const e = withHistory(withReact(createEditor()));\n    \n    // 添加自定义的 normalizeNode 处理\n    const { normalizeNode } = e;\n    e.normalizeNode = ([node, path]) => {\n      if (path.length === 0) {\n        // 确保文档至少有一个段落\n        if (SlateElement.isElement(node)) {\n          if (node.children.length === 0) {\n            const paragraph: ParagraphElement = {\n              type: 'paragraph',\n              children: [{ text: '' }]\n            };\n            Transforms.insertNodes(e, paragraph, { at: [0] });\n            return;\n          }\n          \n          // 确保第一个节点是段落\n          const firstChild = node.children[0];\n          if (\n            !SlateElement.isElement(firstChild) || \n            !('type' in firstChild) || \n            (firstChild as CustomElement).type !== 'paragraph'\n          ) {\n            const paragraph: ParagraphElement = {\n              type: 'paragraph',\n              children: [{ text: '' }]\n            };\n            Transforms.insertNodes(e, paragraph, { at: [0] });\n            return;\n          }\n        }\n      }\n      \n      // 调用原始的 normalizeNode\n      normalizeNode([node, path]);\n    };\n\n    // 添加自定义的 isInline 处理\n    const { isInline } = e;\n    e.isInline = element => {\n      return isInline(element);\n    };\n\n    // 添加自定义的 isVoid 处理\n    const { isVoid } = e;\n    e.isVoid = element => {\n      return isVoid(element);\n    };\n\n    return e;\n  }, []);\n\n  // 修改 value 的初始化和更新\n  const [value, setValue] = useState<Descendant[]>(() => {\n    const initialValue = currentNote?.content || [{\n      type: 'paragraph',\n      children: [{ text: '' }]\n    } as ParagraphElement];\n\n    // 确保内容有效\n    return Array.isArray(initialValue) && initialValue.length > 0\n      ? initialValue\n      : [{ type: 'paragraph', children: [{ text: '' }] } as ParagraphElement];\n  });\n\n  // 修改 handleChange 函数\n  const handleChange = useCallback((newValue: Descendant[]) => {\n    try {\n      // 验证新值的有效性\n      if (!Array.isArray(newValue)) {\n        console.warn('Invalid editor value:', newValue);\n        return;\n      }\n\n      // 确保至少有一个段落\n      if (newValue.length === 0) {\n        newValue = [{\n          type: 'paragraph',\n          children: [{ text: '' }]\n        } as ParagraphElement];\n      }\n\n      setValue(newValue);\n    } catch (error) {\n      console.error('Error in handleChange:', error);\n    }\n  }, []);\n\n  // 切换块类型\n  const toggleBlock = (format: BlockFormatType) => {\n    const isActive = isBlockActive(format);\n    const isList = ['numbered-list', 'bulleted-list'].includes(format);\n\n    Transforms.unwrapNodes(editor, {\n      match: n => \n        SlateElement.isElement(n) && \n        ['numbered-list', 'bulleted-list'].includes(n.type),\n      split: true,\n    });\n\n    if (!isActive && isList) {\n      const block = format === 'numbered-list' \n        ? { type: 'numbered-list' as const, children: [] as ListItemElement[] }\n        : { type: 'bulleted-list' as const, children: [] as ListItemElement[] };\n      Transforms.wrapNodes(editor, block);\n    } else {\n      const newProperties: Partial<SlateElement> = {\n        type: isActive ? 'paragraph' as const : format,\n      };\n      Transforms.setNodes<SlateElement>(editor, newProperties);\n    }\n  };\n\n  // 检查块类型是否激活\n  const isBlockActive = (format: BlockFormatType) => {\n    const [match] = Array.from(\n      Editor.nodes(editor, {\n        match: n =>\n          SlateElement.isElement(n) && n.type === format,\n      })\n    );\n    return !!match;\n  };\n\n  // 渲染元素和叶子节点的回调函数\n  const renderElement = useCallback((props: any) => {\n    const { element, attributes, children } = props;\n    \n    switch (element.type) {\n      case 'paragraph':\n        return <p {...attributes}>{children}</p>;\n      case 'bulleted-list':\n        return <ul {...attributes}>{children}</ul>;\n      case 'numbered-list':\n        return <ol {...attributes}>{children}</ol>;\n      case 'list-item':\n        return <li {...attributes}>{children}</li>;\n      case 'table':\n        return <Table {...props} />;\n      case 'table-row':\n        return <TableRow {...props} />;\n      case 'table-cell':\n        return <TableCell {...props} />;\n      default:\n        return <p {...attributes}>{children}</p>;\n    }\n  }, []);\n\n  const renderLeaf = useCallback((props: RenderLeafProps) => {\n    let style: React.CSSProperties = {};\n    if (props.leaf.bold) style.fontWeight = 'bold';\n    if (props.leaf.italic) style.fontStyle = 'italic';\n    if (props.leaf.underline) style.textDecoration = 'underline';\n\n    return (\n      <span {...props.attributes} style={style}>\n        {props.children}\n      </span>\n    );\n  }, []);\n\n  // 导出功能\n  const handleExport = useCallback((format: 'txt' | 'md' | 'html') => {\n    const text = value.map(n => SlateNode.string(n)).join('\\n');\n    const blob = new Blob([text], { type: 'text/plain;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    a.download = `note-${timestamp}.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [value]);\n\n  // 自动保存钩子\n  useAutoSave(\n    currentNote?.id || null, \n    value, \n    2000, \n    () => console.log('Note saved')\n  );\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [showFindReplace, setShowFindReplace] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n\n  // Add hotkey support\n  useHotkeys('ctrl+f', (e: KeyboardEvent) => {\n    e.preventDefault();\n    setShowFindReplace(true);\n  });\n\n  useHotkeys('ctrl+s', (e: KeyboardEvent) => {\n    e.preventDefault();\n    handleSave();\n  });\n\n  // Add status bar calculations\n  useEffect(() => {\n    const text = value.map(n => Node.string(n)).join('\\n');\n    setWordCount(text.trim().split(/\\s+/).length);\n    setLineCount(value.length);\n  }, [value]);\n\n  // Add find and replace functionality\n  const handleFindReplace = () => {\n    findAndReplace(editor, searchQuery, replaceText);\n  };\n\n  const handleSave = useCallback(() => {\n    if (currentNote?.id) {\n      // 使用 useAutoSave 中的逻辑直接保存\n      dispatch(updateNoteContent({ \n        id: currentNote.id, \n        content: value \n      }));\n      console.log('Note saved manually');\n    }\n  }, [currentNote?.id, value]);\n\n  // 添加新的状态\n  const [fontSize, setFontSize] = useState(16);\n  const [fontFamily, setFontFamily] = useState('Arial');\n\n  const [noteStats, setNoteStats] = useState<NoteStats>({\n    wordCount: 0,\n    characterCount: 0,\n    readingTime: 0,\n    codeBlockCount: 0,\n    tableCount: 0,\n    lastModified: new Date()\n  });\n\n  // Update statistics when content changes\n  useEffect(() => {\n    // 过滤出 CustomElement 类型的节点\n    const elements = value.filter((node): node is CustomElement => \n      'type' in node && typeof node.type === 'string'\n    );\n    \n    const stats = calculateNoteStats(elements);\n    setNoteStats(stats);\n  }, [value]);\n\n  // Add toolbar buttons for code block and table\n  const insertTable = (rows = 3, cols = 3) => {\n    const table: TableElement = {\n      type: 'table',\n      rows,\n      columns: cols,\n      children: Array(rows).fill(0).map((): TableRowElement => ({\n        type: 'table-row',\n        children: Array(cols).fill(0).map((): TableCellElement => ({\n          type: 'table-cell',\n          children: [{ text: '' }]\n        }))\n      }))\n    };\n    Transforms.insertNodes(editor, table);\n  };\n\n  // Add error boundary for content loading\n  useEffect(() => {\n    try {\n      if (currentNote?.content) {\n        const validContent: CustomDescendant[] = Array.isArray(currentNote.content) ? \n          currentNote.content : \n          [{ type: 'paragraph' as const, children: [{ text: '' }] }];\n        setValue(validContent);\n      }\n    } catch (error) {\n      console.error('Error loading note content:', error);\n      setValue([{ type: 'paragraph', children: [{ text: '' }] }]);\n    }\n  }, [currentNote]);\n\n  // Add support for more keyboard shortcuts\n  useHotkeys('ctrl+b', (e: KeyboardEvent) => {\n    e.preventDefault();\n    Editor.addMark(editor, 'bold', true);\n  });\n\n  useHotkeys('ctrl+i', (e: KeyboardEvent) => {\n    e.preventDefault();\n    Editor.addMark(editor, 'italic', true);\n  });\n\n  useHotkeys('ctrl+u', (e: KeyboardEvent) => {\n    e.preventDefault();\n    Editor.addMark(editor, 'underline', true);\n  });\n\n  // Add paste handling\n  const handlePaste = useCallback((event: React.ClipboardEvent) => {\n    event.preventDefault();\n    const text = event.clipboardData.getData('text/plain');\n    const lines = text.split('\\n');\n    \n    if (lines.length > 1) {\n      // Handle multi-line paste with proper typing\n      const nodes: ParagraphElement[] = lines.map(line => ({\n        type: 'paragraph' as const,\n        children: [{ text: line }]\n      }));\n      Editor.insertFragment(editor, nodes);\n    } else {\n      Editor.insertText(editor, text);\n    }\n  }, [editor]);\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <Slate \n        editor={editor} \n        value={value} \n        onChange={handleChange}\n      >\n        <Toolbar \n          editor={editor}\n          onThemeChange={onThemeChange}\n          onToggleBlock={toggleBlock}\n          isBlockActive={isBlockActive}\n          onExport={handleExport}\n          onFindReplace={() => setShowFindReplace(true)}\n          fontSize={fontSize}\n          fontFamily={fontFamily}\n          onFontSizeChange={setFontSize}\n          onFontFamilyChange={setFontFamily}\n          currentSectionId={currentNote?.sectionId}\n          onInsertTable={insertTable}\n        />\n        {showFindReplace && (\n          <div className=\"border-b p-2 flex gap-2 items-center\">\n            <input\n              type=\"text\"\n              placeholder=\"Find...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"px-2 py-1 border rounded\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Replace with...\"\n              value={replaceText}\n              onChange={(e) => setReplaceText(e.target.value)}\n              className=\"px-2 py-1 border rounded\"\n            />\n            <button\n              onClick={handleFindReplace}\n              className=\"px-3 py-1 bg-blue-500 text-white rounded\"\n            >\n              Replace\n            </button>\n            <button\n              onClick={() => setShowFindReplace(false)}\n              className=\"px-2 py-1\"\n            >\n              ✕\n            </button>\n          </div>\n        )}\n        <Editable \n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"开始你的笔记...\"\n          className=\"flex-1 p-4 overflow-auto prose max-w-none dark:prose-invert\"\n          style={{\n            fontSize: `${fontSize}px`,\n            fontFamily\n          }}\n          onPaste={handlePaste}\n          spellCheck={false}\n          autoFocus={true}\n        />\n        <div className=\"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400 flex justify-between\">\n          <div>\n            Lines: {lineCount} | Words: {wordCount}\n          </div>\n          <div>\n            UTF-8\n          </div>\n        </div>\n      </Slate>\n      \n      {/* Add statistics panel */}\n      <div className=\"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex gap-4\">\n            <span>Words: {noteStats.wordCount}</span>\n            <span>Characters: {noteStats.characterCount}</span>\n            <span>Reading Time: {noteStats.readingTime} min</span>\n          </div>\n          <div className=\"flex gap-4\">\n            <span>Code Blocks: {noteStats.codeBlockCount}</span>\n            <span>Tables: {noteStats.tableCount}</span>\n            <span>Last Modified: {noteStats.lastModified.toLocaleTimeString()}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoteEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}