{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  items: [],\n  currentNotebook: null,\n  currentSection: null,\n  currentNote: null,\n  isLoading: false,\n  error: null\n};\nconst notebookSlice = createSlice({\n  name: 'notebooks',\n  initialState,\n  reducers: {\n    setNotebooks: (state, action) => {\n      state.items = action.payload;\n    },\n    addNotebook: (state, action) => {\n      state.items.push(action.payload);\n    },\n    setCurrentNotebook: (state, action) => {\n      state.currentNotebook = action.payload;\n    },\n    setCurrentSection: (state, action) => {\n      state.currentSection = action.payload;\n    },\n    setCurrentNote: (state, action) => {\n      state.currentNote = action.payload;\n    },\n    updateNoteContent: (state, action) => {\n      const {\n        id,\n        content\n      } = action.payload;\n      state.items.forEach(notebook => {\n        notebook.sections.forEach(section => {\n          const note = section.notes.find(n => n.id === id);\n          if (note) {\n            note.content = content;\n            note.updatedAt = new Date();\n          }\n        });\n      });\n    },\n    addSection: (state, action) => {\n      const {\n        notebookId,\n        section\n      } = action.payload;\n      const notebook = state.items.find(nb => nb.id === notebookId);\n      if (notebook) {\n        notebook.sections.push(section);\n      }\n    },\n    addNote: (state, action) => {\n      const {\n        sectionId,\n        note\n      } = action.payload;\n      state.items.forEach(notebook => {\n        const section = notebook.sections.find(s => s.id === sectionId);\n        if (section) {\n          section.notes.push(note);\n        }\n      });\n    }\n  }\n});\nexport const {\n  setNotebooks,\n  addNotebook,\n  setCurrentNotebook,\n  setCurrentSection,\n  setCurrentNote,\n  updateNoteContent,\n  addSection,\n  addNote\n} = notebookSlice.actions;\nexport default notebookSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","items","currentNotebook","currentSection","currentNote","isLoading","error","notebookSlice","name","reducers","setNotebooks","state","action","payload","addNotebook","push","setCurrentNotebook","setCurrentSection","setCurrentNote","updateNoteContent","id","content","forEach","notebook","sections","section","note","notes","find","n","updatedAt","Date","addSection","notebookId","nb","addNote","sectionId","s","actions","reducer"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/store/notebookSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Descendant } from 'slate';\r\nimport { Notebook, Section, Note } from '../types';\r\n\r\ninterface NotebookState {\r\n  items: Notebook[];\r\n  currentNotebook: Notebook | null;\r\n  currentSection: Section | null;\r\n  currentNote: Note | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: NotebookState = {\r\n  items: [],\r\n  currentNotebook: null,\r\n  currentSection: null,\r\n  currentNote: null,\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nconst notebookSlice = createSlice({\r\n  name: 'notebooks',\r\n  initialState,\r\n  reducers: {\r\n    setNotebooks: (state, action: PayloadAction<Notebook[]>) => {\r\n      state.items = action.payload;\r\n    },\r\n    addNotebook: (state, action: PayloadAction<Notebook>) => {\r\n      state.items.push(action.payload);\r\n    },\r\n    setCurrentNotebook: (state, action: PayloadAction<Notebook>) => {\r\n      state.currentNotebook = action.payload;\r\n    },\r\n    setCurrentSection: (state, action: PayloadAction<Section>) => {\r\n      state.currentSection = action.payload;\r\n    },\r\n    setCurrentNote: (state, action: PayloadAction<Note>) => {\r\n      state.currentNote = action.payload;\r\n    },\r\n    updateNoteContent: (\r\n      state,\r\n      action: PayloadAction<{ id: string; content: Descendant[] }>\r\n    ) => {\r\n      const { id, content } = action.payload;\r\n      state.items.forEach(notebook => {\r\n        notebook.sections.forEach(section => {\r\n          const note = section.notes.find(n => n.id === id);\r\n          if (note) {\r\n            note.content = content;\r\n            note.updatedAt = new Date();\r\n          }\r\n        });\r\n      });\r\n    },\r\n    addSection: (state, action: PayloadAction<{ notebookId: string; section: Section }>) => {\r\n      const { notebookId, section } = action.payload;\r\n      const notebook = state.items.find(nb => nb.id === notebookId);\r\n      if (notebook) {\r\n        notebook.sections.push(section);\r\n      }\r\n    },\r\n    addNote: (state, action: PayloadAction<{ sectionId: string; note: Note }>) => {\r\n      const { sectionId, note } = action.payload;\r\n      state.items.forEach(notebook => {\r\n        const section = notebook.sections.find(s => s.id === sectionId);\r\n        if (section) {\r\n          section.notes.push(note);\r\n        }\r\n      });\r\n    }\r\n  }\r\n});\r\n\r\nexport const { \r\n  setNotebooks, \r\n  addNotebook,\r\n  setCurrentNotebook,\r\n  setCurrentSection,\r\n  setCurrentNote,\r\n  updateNoteContent,\r\n  addSection,\r\n  addNote\r\n} = notebookSlice.actions;\r\n\r\nexport default notebookSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}