{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateNoteContent } from '../store/notebookSlice';\nimport { rateLimit } from '../utils/rateLimit';\nexport const useAutoSave = (noteId, content, delay = 2000, onSave) => {\n  _s();\n  const dispatch = useDispatch();\n  const timeoutRef = useRef();\n  const contentRef = useRef(content);\n  const saveCounter = useRef(0);\n  const lastSave = useRef(Date.now());\n  useEffect(() => {\n    contentRef.current = content;\n  }, [content]);\n  const throttledSave = useCallback(rateLimit(async () => {\n    if (!noteId) return;\n    const now = Date.now();\n    if (now - lastSave.current < 1000) {\n      return;\n    }\n    saveCounter.current++;\n    if (saveCounter.current > 30) {\n      console.warn('Too many save attempts');\n      return;\n    }\n    try {\n      dispatch(updateNoteContent({\n        id: noteId,\n        content: contentRef.current\n      }));\n      lastSave.current = now;\n      onSave === null || onSave === void 0 ? void 0 : onSave();\n    } catch (error) {\n      console.error('Auto-save failed:', error);\n    }\n  }, delay), [noteId, content, delay, onSave]);\n  useEffect(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    timeoutRef.current = setTimeout(throttledSave, delay);\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [content, noteId, delay, dispatch, onSave, throttledSave]);\n};\n_s(useAutoSave, \"oLxjaWWP5baukkNpeM7o40cE3J8=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useEffect","useRef","useCallback","useDispatch","updateNoteContent","rateLimit","useAutoSave","noteId","content","delay","onSave","_s","dispatch","timeoutRef","contentRef","saveCounter","lastSave","Date","now","current","throttledSave","console","warn","id","error","clearTimeout","setTimeout"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/hooks/useAutoSave.ts"],"sourcesContent":["import { useEffect, useRef, useCallback } from 'react';\nimport { Descendant } from 'slate';\nimport { useDispatch } from 'react-redux';\nimport { updateNoteContent } from '../store/notebookSlice';\nimport { rateLimit } from '../utils/rateLimit';\n\nexport const useAutoSave = (\n  noteId: string | null,\n  content: Descendant[],\n  delay: number = 2000,\n  onSave?: () => void\n) => {\n  const dispatch = useDispatch();\n  const timeoutRef = useRef<NodeJS.Timeout>();\n  const contentRef = useRef(content);\n  const saveCounter = useRef(0);\n  const lastSave = useRef(Date.now());\n\n  useEffect(() => {\n    contentRef.current = content;\n  }, [content]);\n\n  const throttledSave = useCallback(\n    rateLimit(async () => {\n      if (!noteId) return;\n      \n      const now = Date.now();\n      if (now - lastSave.current < 1000) {\n        return;\n      }\n      \n      saveCounter.current++;\n      if (saveCounter.current > 30) {\n        console.warn('Too many save attempts');\n        return;\n      }\n\n      try {\n        dispatch(updateNoteContent({ \n          id: noteId, \n          content: contentRef.current \n        }));\n        lastSave.current = now;\n        onSave?.();\n      } catch (error) {\n        console.error('Auto-save failed:', error);\n      }\n    }, delay),\n    [noteId, content, delay, onSave]\n  );\n\n  useEffect(() => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(throttledSave, delay);\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [content, noteId, delay, dispatch, onSave, throttledSave]);\n}; "],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAEtD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,OAAO,MAAMC,WAAW,GAAGA,CACzBC,MAAqB,EACrBC,OAAqB,EACrBC,KAAa,GAAG,IAAI,EACpBC,MAAmB,KAChB;EAAAC,EAAA;EACH,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,UAAU,GAAGZ,MAAM,CAAiB,CAAC;EAC3C,MAAMa,UAAU,GAAGb,MAAM,CAACO,OAAO,CAAC;EAClC,MAAMO,WAAW,GAAGd,MAAM,CAAC,CAAC,CAAC;EAC7B,MAAMe,QAAQ,GAAGf,MAAM,CAACgB,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;EAEnClB,SAAS,CAAC,MAAM;IACdc,UAAU,CAACK,OAAO,GAAGX,OAAO;EAC9B,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,MAAMY,aAAa,GAAGlB,WAAW,CAC/BG,SAAS,CAAC,YAAY;IACpB,IAAI,CAACE,MAAM,EAAE;IAEb,MAAMW,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;IACtB,IAAIA,GAAG,GAAGF,QAAQ,CAACG,OAAO,GAAG,IAAI,EAAE;MACjC;IACF;IAEAJ,WAAW,CAACI,OAAO,EAAE;IACrB,IAAIJ,WAAW,CAACI,OAAO,GAAG,EAAE,EAAE;MAC5BE,OAAO,CAACC,IAAI,CAAC,wBAAwB,CAAC;MACtC;IACF;IAEA,IAAI;MACFV,QAAQ,CAACR,iBAAiB,CAAC;QACzBmB,EAAE,EAAEhB,MAAM;QACVC,OAAO,EAAEM,UAAU,CAACK;MACtB,CAAC,CAAC,CAAC;MACHH,QAAQ,CAACG,OAAO,GAAGD,GAAG;MACtBR,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC;IACZ,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C;EACF,CAAC,EAAEf,KAAK,CAAC,EACT,CAACF,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,CACjC,CAAC;EAEDV,SAAS,CAAC,MAAM;IACd,IAAIa,UAAU,CAACM,OAAO,EAAE;MACtBM,YAAY,CAACZ,UAAU,CAACM,OAAO,CAAC;IAClC;IAEAN,UAAU,CAACM,OAAO,GAAGO,UAAU,CAACN,aAAa,EAAEX,KAAK,CAAC;IAErD,OAAO,MAAM;MACX,IAAII,UAAU,CAACM,OAAO,EAAE;QACtBM,YAAY,CAACZ,UAAU,CAACM,OAAO,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACX,OAAO,EAAED,MAAM,EAAEE,KAAK,EAAEG,QAAQ,EAAEF,MAAM,EAAEU,aAAa,CAAC,CAAC;AAC/D,CAAC;AAACT,EAAA,CA1DWL,WAAW;EAAA,QAMLH,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}