{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FanYukin\\\\codes\\\\f\\\\noints\\\\client\\\\src\\\\components\\\\Editor\\\\NoteEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport { createEditor, Editor, Element as SlateElement, Node as SlateNode, Transforms } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { findAndReplace } from '../../utils/textOperations';\nimport { Node } from 'slate';\nimport { updateNoteContent } from '../../store/notebookSlice';\nimport { CodeBlock } from './elements/CodeBlock';\nimport { Table, TableRow, TableCell } from './elements/Table';\nimport { calculateNoteStats } from '../../utils/noteStats';\n\n// 添加类型定义\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditor = ({\n  onThemeChange\n}) => {\n  _s();\n  const dispatch = useDispatch();\n\n  // 获取当前笔记\n  const currentNote = useSelector(state => state.notebooks.currentNote);\n\n  // 使用 useMemo 优化编辑器创建并添加自定义处理\n  const editor = useMemo(() => {\n    const e = withHistory(withReact(createEditor()));\n\n    // 确保节点总是有正确的结构\n    const {\n      normalizeNode\n    } = e;\n    e.normalizeNode = ([node, path]) => {\n      if (path.length === 0) {\n        // 确保文档至少有一个段落\n        if (node.children.length === 0) {\n          const paragraph = {\n            type: 'paragraph',\n            children: [{\n              text: ''\n            }]\n          };\n          Transforms.insertNodes(e, paragraph, {\n            at: [0]\n          });\n        }\n      }\n      return normalizeNode([node, path]);\n    };\n    return e;\n  }, []);\n\n  // 初始化编辑器内容\n  const [value, setValue] = useState(() => {\n    if (currentNote !== null && currentNote !== void 0 && currentNote.content) {\n      return currentNote.content;\n    }\n    return [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n  });\n\n  // 更新内容时的处理\n  const handleChange = useCallback(newValue => {\n    // 确保值的有效性\n    if (!Array.isArray(newValue) || newValue.length === 0) {\n      newValue = [{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }];\n    }\n    setValue(newValue);\n  }, []);\n\n  // 切换块类型\n  const toggleBlock = format => {\n    const isActive = isBlockActive(format);\n    const isList = ['numbered-list', 'bulleted-list'].includes(format);\n    Transforms.unwrapNodes(editor, {\n      match: n => SlateElement.isElement(n) && ['numbered-list', 'bulleted-list'].includes(n.type),\n      split: true\n    });\n    if (!isActive && isList) {\n      const block = format === 'numbered-list' ? {\n        type: 'numbered-list',\n        children: []\n      } : {\n        type: 'bulleted-list',\n        children: []\n      };\n      Transforms.wrapNodes(editor, block);\n    } else {\n      const newProperties = {\n        type: isActive ? 'paragraph' : format\n      };\n      Transforms.setNodes(editor, newProperties);\n    }\n  };\n\n  // 检查块类型是否激活\n  const isBlockActive = format => {\n    const [match] = Array.from(Editor.nodes(editor, {\n      match: n => SlateElement.isElement(n) && n.type === format\n    }));\n    return !!match;\n  };\n\n  // 渲染元素和叶子节点的回调函数\n  const renderElement = useCallback(props => {\n    switch (props.element.type) {\n      case 'paragraph':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 16\n        }, this);\n      case 'bulleted-list':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }, this);\n      case 'numbered-list':\n        return /*#__PURE__*/_jsxDEV(\"ol\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this);\n      case 'list-item':\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this);\n      case 'code-block':\n        return /*#__PURE__*/_jsxDEV(CodeBlock, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }, this);\n      case 'table':\n        return /*#__PURE__*/_jsxDEV(Table, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 16\n        }, this);\n      case 'table-row':\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }, this);\n      case 'table-cell':\n        return /*#__PURE__*/_jsxDEV(TableCell, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 16\n        }, this);\n    }\n  }, []);\n  const renderLeaf = useCallback(props => {\n    let style = {};\n    if (props.leaf.bold) style.fontWeight = 'bold';\n    if (props.leaf.italic) style.fontStyle = 'italic';\n    if (props.leaf.underline) style.textDecoration = 'underline';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      ...props.attributes,\n      style: style,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }, []);\n\n  // 导出功能\n  const handleExport = useCallback(format => {\n    const text = value.map(n => SlateNode.string(n)).join('\\n');\n    const blob = new Blob([text], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    a.download = `note-${timestamp}.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [value]);\n\n  // 自动保存钩子\n  useAutoSave((currentNote === null || currentNote === void 0 ? void 0 : currentNote.id) || null, value, 2000, () => console.log('Note saved'));\n  const [searchQuery, setSearchQuery] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [showFindReplace, setShowFindReplace] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n\n  // Add hotkey support\n  useHotkeys('ctrl+f', e => {\n    e.preventDefault();\n    setShowFindReplace(true);\n  });\n  useHotkeys('ctrl+s', e => {\n    e.preventDefault();\n    handleSave();\n  });\n\n  // Add status bar calculations\n  useEffect(() => {\n    const text = value.map(n => Node.string(n)).join('\\n');\n    setWordCount(text.trim().split(/\\s+/).length);\n    setLineCount(value.length);\n  }, [value]);\n\n  // Add find and replace functionality\n  const handleFindReplace = () => {\n    findAndReplace(editor, searchQuery, replaceText);\n  };\n  const handleSave = useCallback(() => {\n    if (currentNote !== null && currentNote !== void 0 && currentNote.id) {\n      // 使用 useAutoSave 中的逻辑直接保存\n      dispatch(updateNoteContent({\n        id: currentNote.id,\n        content: value\n      }));\n      console.log('Note saved manually');\n    }\n  }, [currentNote === null || currentNote === void 0 ? void 0 : currentNote.id, value]);\n\n  // 添加新的状态\n  const [fontSize, setFontSize] = useState(16);\n  const [fontFamily, setFontFamily] = useState('Arial');\n  const [noteStats, setNoteStats] = useState({\n    wordCount: 0,\n    characterCount: 0,\n    readingTime: 0,\n    codeBlockCount: 0,\n    tableCount: 0,\n    lastModified: new Date()\n  });\n\n  // Update statistics when content changes\n  useEffect(() => {\n    const stats = calculateNoteStats(value);\n    setNoteStats(stats);\n  }, [value]);\n\n  // Add toolbar buttons for code block and table\n  const insertCodeBlock = () => {\n    const codeBlock = {\n      type: 'code-block',\n      language: 'typescript',\n      children: [{\n        text: ''\n      }]\n    };\n    Transforms.insertNodes(editor, codeBlock);\n  };\n  const insertTable = (rows = 3, cols = 3) => {\n    const table = {\n      type: 'table',\n      rows,\n      columns: cols,\n      children: Array(rows).fill(0).map(() => ({\n        type: 'table-row',\n        children: Array(cols).fill(0).map(() => ({\n          type: 'table-cell',\n          children: [{\n            text: ''\n          }]\n        }))\n      }))\n    };\n    Transforms.insertNodes(editor, table);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Slate, {\n      editor: editor,\n      value: value,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        editor: editor,\n        onThemeChange: onThemeChange,\n        onToggleBlock: toggleBlock,\n        isBlockActive: isBlockActive,\n        onExport: handleExport,\n        onFindReplace: () => setShowFindReplace(true),\n        fontSize: fontSize,\n        fontFamily: fontFamily,\n        onFontSizeChange: setFontSize,\n        onFontFamilyChange: setFontFamily,\n        currentSectionId: currentNote === null || currentNote === void 0 ? void 0 : currentNote.sectionId,\n        onInsertCodeBlock: insertCodeBlock,\n        onInsertTable: insertTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), showFindReplace && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b p-2 flex gap-2 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Find...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"px-2 py-1 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Replace with...\",\n          value: replaceText,\n          onChange: e => setReplaceText(e.target.value),\n          className: \"px-2 py-1 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindReplace,\n          className: \"px-3 py-1 bg-blue-500 text-white rounded\",\n          children: \"Replace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFindReplace(false),\n          className: \"px-2 py-1\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Editable, {\n        renderElement: renderElement,\n        renderLeaf: renderLeaf,\n        placeholder: \"\\u5F00\\u59CB\\u4F60\\u7684\\u7B14\\u8BB0...\",\n        className: \"flex-1 p-4 overflow-auto prose max-w-none dark:prose-invert\",\n        style: {\n          fontSize: `${fontSize}px`,\n          fontFamily\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400 flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Lines: \", lineCount, \" | Words: \", wordCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Words: \", noteStats.wordCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Characters: \", noteStats.characterCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Reading Time: \", noteStats.readingTime, \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Code Blocks: \", noteStats.codeBlockCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Tables: \", noteStats.tableCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Last Modified: \", noteStats.lastModified.toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteEditor, \"OMyIpeHaR4ElCRiQ/neAdl3vkwM=\", false, function () {\n  return [useDispatch, useSelector, useAutoSave, useHotkeys, useHotkeys];\n});\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useMemo","useState","useCallback","useEffect","createEditor","Editor","Element","SlateElement","Node","SlateNode","Transforms","Slate","Editable","withReact","withHistory","useSelector","useDispatch","useAutoSave","Toolbar","useHotkeys","findAndReplace","updateNoteContent","CodeBlock","Table","TableRow","TableCell","calculateNoteStats","jsxDEV","_jsxDEV","NoteEditor","onThemeChange","_s","dispatch","currentNote","state","notebooks","editor","e","normalizeNode","node","path","length","children","paragraph","type","text","insertNodes","at","value","setValue","content","handleChange","newValue","Array","isArray","toggleBlock","format","isActive","isBlockActive","isList","includes","unwrapNodes","match","n","isElement","split","block","wrapNodes","newProperties","setNodes","from","nodes","renderElement","props","element","attributes","fileName","_jsxFileName","lineNumber","columnNumber","renderLeaf","style","leaf","bold","fontWeight","italic","fontStyle","underline","textDecoration","handleExport","map","string","join","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","timestamp","Date","toISOString","replace","download","body","appendChild","click","removeChild","revokeObjectURL","id","console","log","searchQuery","setSearchQuery","replaceText","setReplaceText","showFindReplace","setShowFindReplace","wordCount","setWordCount","lineCount","setLineCount","preventDefault","handleSave","trim","handleFindReplace","fontSize","setFontSize","fontFamily","setFontFamily","noteStats","setNoteStats","characterCount","readingTime","codeBlockCount","tableCount","lastModified","stats","insertCodeBlock","codeBlock","language","insertTable","rows","cols","table","columns","fill","className","onChange","onToggleBlock","onExport","onFindReplace","onFontSizeChange","onFontFamilyChange","currentSectionId","sectionId","onInsertCodeBlock","onInsertTable","placeholder","target","onClick","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/components/Editor/NoteEditor.tsx"],"sourcesContent":["import React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport { \n  createEditor, \n  Descendant, \n  Editor, \n  Element as SlateElement,\n  Node as SlateNode,\n  Transforms\n} from 'slate';\nimport { Slate, Editable, withReact, RenderLeafProps } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { CustomElement, CustomText, BlockFormatType, NoteStats, TableElement, TableRowElement, TableCellElement, CodeBlockElement, ListItemElement } from './types';\nimport { RootState } from '../../store';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { findAndReplace } from '../../utils/textOperations';\nimport { Node } from 'slate';\nimport { updateNoteContent } from '../../store/notebookSlice';\nimport { CodeBlock } from './elements/CodeBlock';\nimport { Table, TableRow, TableCell } from './elements/Table';\nimport { calculateNoteStats } from '../../utils/noteStats';\n\ninterface EditorProps {\n  onThemeChange?: (isDark: boolean) => void;\n}\n\n// 添加类型定义\ninterface KeyboardEvent {\n  preventDefault: () => void;\n}\n\nconst NoteEditor: React.FC<EditorProps> = ({ onThemeChange }) => {\n  const dispatch = useDispatch();\n\n  // 获取当前笔记\n  const currentNote = useSelector((state: RootState) => state.notebooks.currentNote);\n\n  // 使用 useMemo 优化编辑器创建并添加自定义处理\n  const editor = useMemo(() => {\n    const e = withHistory(withReact(createEditor()));\n    \n    // 确保节点总是有正确的结构\n    const { normalizeNode } = e;\n    e.normalizeNode = ([node, path]) => {\n      if (path.length === 0) {\n        // 确保文档至少有一个段落\n        if (node.children.length === 0) {\n          const paragraph: ParagraphElement = {\n            type: 'paragraph',\n            children: [{ text: '' }]\n          };\n          Transforms.insertNodes(e, paragraph, { at: [0] });\n        }\n      }\n      return normalizeNode([node, path]);\n    };\n\n    return e;\n  }, []);\n\n  // 初始化编辑器内容\n  const [value, setValue] = useState<CustomElement[]>(() => {\n    if (currentNote?.content) {\n      return currentNote.content;\n    }\n    return [{\n      type: 'paragraph',\n      children: [{ text: '' }]\n    }];\n  });\n\n  // 更新内容时的处理\n  const handleChange = useCallback((newValue: CustomElement[]) => {\n    // 确保值的有效性\n    if (!Array.isArray(newValue) || newValue.length === 0) {\n      newValue = [{\n        type: 'paragraph',\n        children: [{ text: '' }]\n      }];\n    }\n    setValue(newValue);\n  }, []);\n\n  // 切换块类型\n  const toggleBlock = (format: BlockFormatType) => {\n    const isActive = isBlockActive(format);\n    const isList = ['numbered-list', 'bulleted-list'].includes(format);\n\n    Transforms.unwrapNodes(editor, {\n      match: n => \n        SlateElement.isElement(n) && \n        ['numbered-list', 'bulleted-list'].includes(n.type),\n      split: true,\n    });\n\n    if (!isActive && isList) {\n      const block = format === 'numbered-list' \n        ? { type: 'numbered-list' as const, children: [] as ListItemElement[] }\n        : { type: 'bulleted-list' as const, children: [] as ListItemElement[] };\n      Transforms.wrapNodes(editor, block);\n    } else {\n      const newProperties: Partial<SlateElement> = {\n        type: isActive ? 'paragraph' as const : format,\n      };\n      Transforms.setNodes<SlateElement>(editor, newProperties);\n    }\n  };\n\n  // 检查块类型是否激活\n  const isBlockActive = (format: BlockFormatType) => {\n    const [match] = Array.from(\n      Editor.nodes(editor, {\n        match: n =>\n          SlateElement.isElement(n) && n.type === format,\n      })\n    );\n    return !!match;\n  };\n\n  // 渲染元素和叶子节点的回调函数\n  const renderElement = useCallback((props: any) => {\n    switch (props.element.type) {\n      case 'paragraph':\n        return <p {...props.attributes}>{props.children}</p>;\n      case 'bulleted-list':\n        return <ul {...props.attributes}>{props.children}</ul>;\n      case 'numbered-list':\n        return <ol {...props.attributes}>{props.children}</ol>;\n      case 'list-item':\n        return <li {...props.attributes}>{props.children}</li>;\n      case 'code-block':\n        return <CodeBlock {...props} />;\n      case 'table':\n        return <Table {...props} />;\n      case 'table-row':\n        return <TableRow {...props} />;\n      case 'table-cell':\n        return <TableCell {...props} />;\n      default:\n        return <p {...props.attributes}>{props.children}</p>;\n    }\n  }, []);\n\n  const renderLeaf = useCallback((props: RenderLeafProps) => {\n    let style: React.CSSProperties = {};\n    if (props.leaf.bold) style.fontWeight = 'bold';\n    if (props.leaf.italic) style.fontStyle = 'italic';\n    if (props.leaf.underline) style.textDecoration = 'underline';\n\n    return (\n      <span {...props.attributes} style={style}>\n        {props.children}\n      </span>\n    );\n  }, []);\n\n  // 导出功能\n  const handleExport = useCallback((format: 'txt' | 'md' | 'html') => {\n    const text = value.map(n => SlateNode.string(n)).join('\\n');\n    const blob = new Blob([text], { type: 'text/plain;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    a.download = `note-${timestamp}.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [value]);\n\n  // 自动保存钩子\n  useAutoSave(\n    currentNote?.id || null, \n    value, \n    2000, \n    () => console.log('Note saved')\n  );\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [showFindReplace, setShowFindReplace] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n\n  // Add hotkey support\n  useHotkeys('ctrl+f', (e: KeyboardEvent) => {\n    e.preventDefault();\n    setShowFindReplace(true);\n  });\n\n  useHotkeys('ctrl+s', (e: KeyboardEvent) => {\n    e.preventDefault();\n    handleSave();\n  });\n\n  // Add status bar calculations\n  useEffect(() => {\n    const text = value.map(n => Node.string(n)).join('\\n');\n    setWordCount(text.trim().split(/\\s+/).length);\n    setLineCount(value.length);\n  }, [value]);\n\n  // Add find and replace functionality\n  const handleFindReplace = () => {\n    findAndReplace(editor, searchQuery, replaceText);\n  };\n\n  const handleSave = useCallback(() => {\n    if (currentNote?.id) {\n      // 使用 useAutoSave 中的逻辑直接保存\n      dispatch(updateNoteContent({ \n        id: currentNote.id, \n        content: value \n      }));\n      console.log('Note saved manually');\n    }\n  }, [currentNote?.id, value]);\n\n  // 添加新的状态\n  const [fontSize, setFontSize] = useState(16);\n  const [fontFamily, setFontFamily] = useState('Arial');\n\n  const [noteStats, setNoteStats] = useState<NoteStats>({\n    wordCount: 0,\n    characterCount: 0,\n    readingTime: 0,\n    codeBlockCount: 0,\n    tableCount: 0,\n    lastModified: new Date()\n  });\n\n  // Update statistics when content changes\n  useEffect(() => {\n    const stats = calculateNoteStats(value);\n    setNoteStats(stats);\n  }, [value]);\n\n  // Add toolbar buttons for code block and table\n  const insertCodeBlock = () => {\n    const codeBlock: CodeBlockElement = {\n      type: 'code-block',\n      language: 'typescript',\n      children: [{ text: '' }]\n    };\n    Transforms.insertNodes(editor, codeBlock);\n  };\n\n  const insertTable = (rows = 3, cols = 3) => {\n    const table: TableElement = {\n      type: 'table',\n      rows,\n      columns: cols,\n      children: Array(rows).fill(0).map((): TableRowElement => ({\n        type: 'table-row',\n        children: Array(cols).fill(0).map((): TableCellElement => ({\n          type: 'table-cell',\n          children: [{ text: '' }]\n        }))\n      }))\n    };\n    Transforms.insertNodes(editor, table);\n  };\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <Slate \n        editor={editor} \n        value={value} \n        onChange={handleChange}\n      >\n        <Toolbar \n          editor={editor}\n          onThemeChange={onThemeChange}\n          onToggleBlock={toggleBlock}\n          isBlockActive={isBlockActive}\n          onExport={handleExport}\n          onFindReplace={() => setShowFindReplace(true)}\n          fontSize={fontSize}\n          fontFamily={fontFamily}\n          onFontSizeChange={setFontSize}\n          onFontFamilyChange={setFontFamily}\n          currentSectionId={currentNote?.sectionId}\n          onInsertCodeBlock={insertCodeBlock}\n          onInsertTable={insertTable}\n        />\n        {showFindReplace && (\n          <div className=\"border-b p-2 flex gap-2 items-center\">\n            <input\n              type=\"text\"\n              placeholder=\"Find...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"px-2 py-1 border rounded\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Replace with...\"\n              value={replaceText}\n              onChange={(e) => setReplaceText(e.target.value)}\n              className=\"px-2 py-1 border rounded\"\n            />\n            <button\n              onClick={handleFindReplace}\n              className=\"px-3 py-1 bg-blue-500 text-white rounded\"\n            >\n              Replace\n            </button>\n            <button\n              onClick={() => setShowFindReplace(false)}\n              className=\"px-2 py-1\"\n            >\n              ✕\n            </button>\n          </div>\n        )}\n        <Editable \n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"开始你的笔记...\"\n          className=\"flex-1 p-4 overflow-auto prose max-w-none dark:prose-invert\"\n          style={{\n            fontSize: `${fontSize}px`,\n            fontFamily\n          }}\n        />\n        <div className=\"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400 flex justify-between\">\n          <div>\n            Lines: {lineCount} | Words: {wordCount}\n          </div>\n          <div>\n            UTF-8\n          </div>\n        </div>\n      </Slate>\n      \n      {/* Add statistics panel */}\n      <div className=\"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex gap-4\">\n            <span>Words: {noteStats.wordCount}</span>\n            <span>Characters: {noteStats.characterCount}</span>\n            <span>Reading Time: {noteStats.readingTime} min</span>\n          </div>\n          <div className=\"flex gap-4\">\n            <span>Code Blocks: {noteStats.codeBlockCount}</span>\n            <span>Tables: {noteStats.tableCount}</span>\n            <span>Last Modified: {noteStats.lastModified.toLocaleTimeString()}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoteEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}