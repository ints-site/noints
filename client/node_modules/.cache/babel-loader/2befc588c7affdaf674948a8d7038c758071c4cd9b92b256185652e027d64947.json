{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FanYukin\\\\codes\\\\f\\\\noints\\\\client\\\\src\\\\components\\\\Editor\\\\NoteEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport { createEditor, Editor, Element as SlateElement, Node as SlateNode, Transforms, Range } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { findAndReplace } from '../../utils/textOperations';\nimport { Node } from 'slate';\nimport { updateNoteContent } from '../../store/notebookSlice';\nimport { Table, TableRow, TableCell } from './elements/Table';\nimport { calculateNoteStats } from '../../utils/noteStats';\n\n// 添加类型定义\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditor = ({\n  onThemeChange\n}) => {\n  _s();\n  const dispatch = useDispatch();\n\n  // 获取当前笔记\n  const currentNote = useSelector(state => state.notebooks.currentNote);\n\n  // 修改 editor 的创建方式，添加更多的安全检查\n  const editor = useMemo(() => {\n    const e = withHistory(withReact(createEditor()));\n\n    // 增强 normalizeNode 处理\n    const {\n      normalizeNode\n    } = e;\n    e.normalizeNode = ([node, path]) => {\n      if (path.length === 0) {\n        // 确保文档至少有一个段落\n        if (SlateElement.isElement(node)) {\n          if (node.children.length === 0) {\n            const paragraph = {\n              type: 'paragraph',\n              children: [{\n                text: ''\n              }]\n            };\n            Transforms.insertNodes(e, paragraph, {\n              at: [0]\n            });\n            return;\n          }\n        }\n      }\n\n      // 确保所有节点都有有效的 children\n      if (SlateElement.isElement(node)) {\n        for (const [child, childPath] of Node.children(e, path)) {\n          if (SlateElement.isElement(child) && (!child.children || child.children.length === 0)) {\n            Transforms.removeNodes(e, {\n              at: childPath\n            });\n            continue;\n          }\n        }\n      }\n      normalizeNode([node, path]);\n    };\n\n    // 增强 insertBreak 处理\n    const {\n      insertBreak\n    } = e;\n    e.insertBreak = () => {\n      const {\n        selection\n      } = e;\n      if (selection) {\n        const [parent] = Editor.parent(e, selection);\n        // 如果在特殊块中（如表格单元格），使用默认行为\n        if (SlateElement.isElement(parent) && ['table-cell'].includes(parent.type)) {\n          insertBreak();\n          return;\n        }\n      }\n\n      // 默认插入新段落\n      Transforms.insertNodes(e, {\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      });\n    };\n\n    // 修改 deleteBackward 处理，使用正确的 API\n    const {\n      deleteBackward\n    } = e;\n    e.deleteBackward = (...args) => {\n      const {\n        selection\n      } = e;\n      if (selection && Range.isCollapsed(selection)) {\n        const match = Editor.above(e, {\n          match: n => SlateElement.isElement(n) && Editor.isBlock(e, n)\n        });\n        if (match) {\n          const [block, path] = match;\n          const start = Editor.start(e, path);\n          if (SlateElement.isElement(block) && block.type !== 'paragraph' && Editor.isStart(e, selection.anchor, path)) {\n            Transforms.setNodes(e, {\n              type: 'paragraph'\n            });\n            return;\n          }\n        }\n      }\n      deleteBackward(...args);\n    };\n    return e;\n  }, []);\n\n  // 修改 value 的初始化和更新\n  const [value, setValue] = useState(() => {\n    const initialValue = (currentNote === null || currentNote === void 0 ? void 0 : currentNote.content) || [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n\n    // 确保内容有效\n    return Array.isArray(initialValue) && initialValue.length > 0 ? initialValue : [{\n      type: 'paragraph',\n      children: [{\n        text: ''\n      }]\n    }];\n  });\n\n  // 修改 handleChange 函数，添加更多的安全检查\n  const handleChange = useCallback(newValue => {\n    try {\n      // 验证新值的有效性\n      if (!Array.isArray(newValue)) {\n        console.warn('Invalid editor value:', newValue);\n        return;\n      }\n\n      // 确保所有节点都有有效的结构\n      const validValue = newValue.map(node => {\n        if (!('type' in node)) {\n          return {\n            type: 'paragraph',\n            children: [{\n              text: node.text || ''\n            }]\n          };\n        }\n        return node;\n      });\n\n      // 确保至少有一个段落\n      if (validValue.length === 0) {\n        validValue.push({\n          type: 'paragraph',\n          children: [{\n            text: ''\n          }]\n        });\n      }\n      setValue(validValue);\n    } catch (error) {\n      console.error('Error in handleChange:', error);\n      // 恢复到安全状态\n      setValue([{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }]);\n    }\n  }, []);\n\n  // 切换块类型\n  const toggleBlock = format => {\n    const isActive = isBlockActive(format);\n    const isList = ['numbered-list', 'bulleted-list'].includes(format);\n    Transforms.unwrapNodes(editor, {\n      match: n => SlateElement.isElement(n) && ['numbered-list', 'bulleted-list'].includes(n.type),\n      split: true\n    });\n    if (!isActive && isList) {\n      const block = format === 'numbered-list' ? {\n        type: 'numbered-list',\n        children: []\n      } : {\n        type: 'bulleted-list',\n        children: []\n      };\n      Transforms.wrapNodes(editor, block);\n    } else {\n      const newProperties = {\n        type: isActive ? 'paragraph' : format\n      };\n      Transforms.setNodes(editor, newProperties);\n    }\n  };\n\n  // 检查块类型是否激活\n  const isBlockActive = format => {\n    const [match] = Array.from(Editor.nodes(editor, {\n      match: n => SlateElement.isElement(n) && n.type === format\n    }));\n    return !!match;\n  };\n\n  // 渲染元素和叶子节点的回调函数\n  const renderElement = useCallback(props => {\n    const {\n      element,\n      attributes,\n      children\n    } = props;\n    switch (element.type) {\n      case 'paragraph':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 16\n        }, this);\n      case 'bulleted-list':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 16\n        }, this);\n      case 'numbered-list':\n        return /*#__PURE__*/_jsxDEV(\"ol\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 16\n        }, this);\n      case 'list-item':\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 16\n        }, this);\n      case 'table':\n        return /*#__PURE__*/_jsxDEV(Table, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 16\n        }, this);\n      case 'table-row':\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 16\n        }, this);\n      case 'table-cell':\n        return /*#__PURE__*/_jsxDEV(TableCell, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...attributes,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 16\n        }, this);\n    }\n  }, []);\n  const renderLeaf = useCallback(props => {\n    let style = {};\n    if (props.leaf.bold) style.fontWeight = 'bold';\n    if (props.leaf.italic) style.fontStyle = 'italic';\n    if (props.leaf.underline) style.textDecoration = 'underline';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      ...props.attributes,\n      style: style,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this);\n  }, []);\n\n  // 导出功能\n  const handleExport = useCallback(format => {\n    const text = value.map(n => SlateNode.string(n)).join('\\n');\n    const blob = new Blob([text], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    a.download = `note-${timestamp}.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [value]);\n\n  // 自动保存钩子\n  useAutoSave((currentNote === null || currentNote === void 0 ? void 0 : currentNote.id) || null, value, 2000, () => console.log('Note saved'));\n  const [searchQuery, setSearchQuery] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [showFindReplace, setShowFindReplace] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n\n  // Add hotkey support\n  useHotkeys('ctrl+f', e => {\n    e.preventDefault();\n    setShowFindReplace(true);\n  });\n  useHotkeys('ctrl+s', e => {\n    e.preventDefault();\n    handleSave();\n  });\n\n  // Add status bar calculations\n  useEffect(() => {\n    const text = value.map(n => Node.string(n)).join('\\n');\n    setWordCount(text.trim().split(/\\s+/).length);\n    setLineCount(value.length);\n  }, [value]);\n\n  // Add find and replace functionality\n  const handleFindReplace = () => {\n    findAndReplace(editor, searchQuery, replaceText);\n  };\n  const handleSave = useCallback(() => {\n    if (currentNote !== null && currentNote !== void 0 && currentNote.id) {\n      // 使用 useAutoSave 中的逻辑直接保存\n      dispatch(updateNoteContent({\n        id: currentNote.id,\n        content: value\n      }));\n      console.log('Note saved manually');\n    }\n  }, [currentNote === null || currentNote === void 0 ? void 0 : currentNote.id, value]);\n\n  // 添加新的状态\n  const [fontSize, setFontSize] = useState(16);\n  const [fontFamily, setFontFamily] = useState('Arial');\n  const [noteStats, setNoteStats] = useState({\n    wordCount: 0,\n    characterCount: 0,\n    readingTime: 0,\n    codeBlockCount: 0,\n    tableCount: 0,\n    lastModified: new Date()\n  });\n\n  // Update statistics when content changes\n  useEffect(() => {\n    // 过滤出 CustomElement 类型的节点\n    const elements = value.filter(node => 'type' in node && typeof node.type === 'string');\n    const stats = calculateNoteStats(elements);\n    setNoteStats(stats);\n  }, [value]);\n\n  // Add toolbar buttons for code block and table\n  const insertTable = (rows = 3, cols = 3) => {\n    const table = {\n      type: 'table',\n      rows,\n      columns: cols,\n      children: Array(rows).fill(0).map(() => ({\n        type: 'table-row',\n        children: Array(cols).fill(0).map(() => ({\n          type: 'table-cell',\n          children: [{\n            text: ''\n          }]\n        }))\n      }))\n    };\n    Transforms.insertNodes(editor, table);\n  };\n\n  // Add error boundary for content loading\n  useEffect(() => {\n    try {\n      if (currentNote !== null && currentNote !== void 0 && currentNote.content) {\n        const validContent = Array.isArray(currentNote.content) ? currentNote.content : [{\n          type: 'paragraph',\n          children: [{\n            text: ''\n          }]\n        }];\n        setValue(validContent);\n      }\n    } catch (error) {\n      console.error('Error loading note content:', error);\n      setValue([{\n        type: 'paragraph',\n        children: [{\n          text: ''\n        }]\n      }]);\n    }\n  }, [currentNote]);\n\n  // Add support for more keyboard shortcuts\n  useHotkeys('ctrl+b', e => {\n    e.preventDefault();\n    Editor.addMark(editor, 'bold', true);\n  });\n  useHotkeys('ctrl+i', e => {\n    e.preventDefault();\n    Editor.addMark(editor, 'italic', true);\n  });\n  useHotkeys('ctrl+u', e => {\n    e.preventDefault();\n    Editor.addMark(editor, 'underline', true);\n  });\n\n  // Add paste handling\n  const handlePaste = useCallback(event => {\n    event.preventDefault();\n    const text = event.clipboardData.getData('text/plain');\n    const lines = text.split('\\n');\n    if (lines.length > 1) {\n      // Handle multi-line paste with proper typing\n      const nodes = lines.map(line => ({\n        type: 'paragraph',\n        children: [{\n          text: line\n        }]\n      }));\n      Editor.insertFragment(editor, nodes);\n    } else {\n      Editor.insertText(editor, text);\n    }\n  }, [editor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(Slate, {\n      editor: editor,\n      value: value,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        editor: editor,\n        onThemeChange: onThemeChange,\n        onToggleBlock: toggleBlock,\n        isBlockActive: isBlockActive,\n        onExport: handleExport,\n        onFindReplace: () => setShowFindReplace(true),\n        fontSize: fontSize,\n        fontFamily: fontFamily,\n        onFontSizeChange: setFontSize,\n        onFontFamilyChange: setFontFamily,\n        currentSectionId: currentNote === null || currentNote === void 0 ? void 0 : currentNote.sectionId,\n        onInsertTable: insertTable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), showFindReplace && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b p-2 flex gap-2 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Find...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"px-2 py-1 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Replace with...\",\n          value: replaceText,\n          onChange: e => setReplaceText(e.target.value),\n          className: \"px-2 py-1 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindReplace,\n          className: \"px-3 py-1 bg-blue-500 text-white rounded\",\n          children: \"Replace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFindReplace(false),\n          className: \"px-2 py-1\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Editable, {\n        renderElement: renderElement,\n        renderLeaf: renderLeaf,\n        placeholder: \"\\u5F00\\u59CB\\u4F60\\u7684\\u7B14\\u8BB0...\",\n        className: \"flex-1 p-4 overflow-auto prose max-w-none dark:prose-invert\",\n        style: {\n          fontSize: `${fontSize}px`,\n          fontFamily\n        },\n        onPaste: handlePaste,\n        spellCheck: false,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400 flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Lines: \", lineCount, \" | Words: \", wordCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this)]\n    }, (currentNote === null || currentNote === void 0 ? void 0 : currentNote.id) || 'editor', true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Words: \", noteStats.wordCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Characters: \", noteStats.characterCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Reading Time: \", noteStats.readingTime, \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Code Blocks: \", noteStats.codeBlockCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Tables: \", noteStats.tableCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Last Modified: \", noteStats.lastModified.toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteEditor, \"qHQTMwGyS1V7zVx8qvMHuHhga4A=\", false, function () {\n  return [useDispatch, useSelector, useAutoSave, useHotkeys, useHotkeys, useHotkeys, useHotkeys, useHotkeys];\n});\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useMemo","useState","useCallback","useEffect","createEditor","Editor","Element","SlateElement","Node","SlateNode","Transforms","Range","Slate","Editable","withReact","withHistory","useSelector","useDispatch","useAutoSave","Toolbar","useHotkeys","findAndReplace","updateNoteContent","Table","TableRow","TableCell","calculateNoteStats","jsxDEV","_jsxDEV","NoteEditor","onThemeChange","_s","dispatch","currentNote","state","notebooks","editor","e","normalizeNode","node","path","length","isElement","children","paragraph","type","text","insertNodes","at","child","childPath","removeNodes","insertBreak","selection","parent","includes","deleteBackward","args","isCollapsed","match","above","n","isBlock","block","start","isStart","anchor","setNodes","value","setValue","initialValue","content","Array","isArray","handleChange","newValue","console","warn","validValue","map","push","error","toggleBlock","format","isActive","isBlockActive","isList","unwrapNodes","split","wrapNodes","newProperties","from","nodes","renderElement","props","element","attributes","fileName","_jsxFileName","lineNumber","columnNumber","renderLeaf","style","leaf","bold","fontWeight","italic","fontStyle","underline","textDecoration","handleExport","string","join","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","timestamp","Date","toISOString","replace","download","body","appendChild","click","removeChild","revokeObjectURL","id","log","searchQuery","setSearchQuery","replaceText","setReplaceText","showFindReplace","setShowFindReplace","wordCount","setWordCount","lineCount","setLineCount","preventDefault","handleSave","trim","handleFindReplace","fontSize","setFontSize","fontFamily","setFontFamily","noteStats","setNoteStats","characterCount","readingTime","codeBlockCount","tableCount","lastModified","elements","filter","stats","insertTable","rows","cols","table","columns","fill","validContent","addMark","handlePaste","event","clipboardData","getData","lines","line","insertFragment","insertText","className","onChange","onToggleBlock","onExport","onFindReplace","onFontSizeChange","onFontFamilyChange","currentSectionId","sectionId","onInsertTable","placeholder","target","onClick","onPaste","spellCheck","autoFocus","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/components/Editor/NoteEditor.tsx"],"sourcesContent":["import React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport { \n  createEditor, \n  Descendant, \n  Editor, \n  Element as SlateElement,\n  Node as SlateNode,\n  Transforms,\n  Text,\n  Range,\n  Point\n} from 'slate';\nimport { Slate, Editable, withReact, RenderLeafProps } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { \n  CustomElement, \n  CustomText, \n  BlockFormatType, \n  NoteStats, \n  TableElement, \n  TableRowElement, \n  TableCellElement, \n  ListItemElement, \n  ParagraphElement, \n  CustomDescendant \n} from './types';\nimport { RootState } from '../../store';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { findAndReplace } from '../../utils/textOperations';\nimport { Node } from 'slate';\nimport { updateNoteContent } from '../../store/notebookSlice';\nimport { Table, TableRow, TableCell } from './elements/Table';\nimport { calculateNoteStats } from '../../utils/noteStats';\n\ninterface EditorProps {\n  onThemeChange?: (isDark: boolean) => void;\n}\n\n// 添加类型定义\ninterface KeyboardEvent {\n  preventDefault: () => void;\n}\n\nconst NoteEditor: React.FC<EditorProps> = ({ onThemeChange }) => {\n  const dispatch = useDispatch();\n\n  // 获取当前笔记\n  const currentNote = useSelector((state: RootState) => state.notebooks.currentNote);\n\n  // 修改 editor 的创建方式，添加更多的安全检查\n  const editor = useMemo(() => {\n    const e = withHistory(withReact(createEditor()));\n    \n    // 增强 normalizeNode 处理\n    const { normalizeNode } = e;\n    e.normalizeNode = ([node, path]) => {\n      if (path.length === 0) {\n        // 确保文档至少有一个段落\n        if (SlateElement.isElement(node)) {\n          if (node.children.length === 0) {\n            const paragraph: ParagraphElement = {\n              type: 'paragraph',\n              children: [{ text: '' }]\n            };\n            Transforms.insertNodes(e, paragraph, { at: [0] });\n            return;\n          }\n        }\n      }\n\n      // 确保所有节点都有有效的 children\n      if (SlateElement.isElement(node)) {\n        for (const [child, childPath] of Node.children(e, path)) {\n          if (SlateElement.isElement(child) && (!child.children || child.children.length === 0)) {\n            Transforms.removeNodes(e, { at: childPath });\n            continue;\n          }\n        }\n      }\n      \n      normalizeNode([node, path]);\n    };\n\n    // 增强 insertBreak 处理\n    const { insertBreak } = e;\n    e.insertBreak = () => {\n      const { selection } = e;\n      if (selection) {\n        const [parent] = Editor.parent(e, selection);\n        // 如果在特殊块中（如表格单元格），使用默认行为\n        if (SlateElement.isElement(parent) && ['table-cell'].includes(parent.type)) {\n          insertBreak();\n          return;\n        }\n      }\n      \n      // 默认插入新段落\n      Transforms.insertNodes(e, {\n        type: 'paragraph',\n        children: [{ text: '' }]\n      } as ParagraphElement);\n    };\n\n    // 修改 deleteBackward 处理，使用正确的 API\n    const { deleteBackward } = e;\n    e.deleteBackward = (...args) => {\n      const { selection } = e;\n      if (selection && Range.isCollapsed(selection)) {\n        const match = Editor.above(e, {\n          match: n => SlateElement.isElement(n) && Editor.isBlock(e, n),\n        });\n\n        if (match) {\n          const [block, path] = match;\n          const start = Editor.start(e, path);\n\n          if (\n            SlateElement.isElement(block) &&\n            block.type !== 'paragraph' &&\n            Editor.isStart(e, selection.anchor, path)\n          ) {\n            Transforms.setNodes(e, { type: 'paragraph' });\n            return;\n          }\n        }\n      }\n      deleteBackward(...args);\n    };\n\n    return e;\n  }, []);\n\n  // 修改 value 的初始化和更新\n  const [value, setValue] = useState<Descendant[]>(() => {\n    const initialValue = currentNote?.content || [{\n      type: 'paragraph',\n      children: [{ text: '' }]\n    } as ParagraphElement];\n\n    // 确保内容有效\n    return Array.isArray(initialValue) && initialValue.length > 0\n      ? initialValue\n      : [{ type: 'paragraph', children: [{ text: '' }] } as ParagraphElement];\n  });\n\n  // 修改 handleChange 函数，添加更多的安全检查\n  const handleChange = useCallback((newValue: Descendant[]) => {\n    try {\n      // 验证新值的有效性\n      if (!Array.isArray(newValue)) {\n        console.warn('Invalid editor value:', newValue);\n        return;\n      }\n\n      // 确保所有节点都有有效的结构\n      const validValue = newValue.map(node => {\n        if (!('type' in node)) {\n          return {\n            type: 'paragraph',\n            children: [{ text: node.text || '' }]\n          } as ParagraphElement;\n        }\n        return node;\n      });\n\n      // 确保至少有一个段落\n      if (validValue.length === 0) {\n        validValue.push({\n          type: 'paragraph',\n          children: [{ text: '' }]\n        } as ParagraphElement);\n      }\n\n      setValue(validValue);\n    } catch (error) {\n      console.error('Error in handleChange:', error);\n      // 恢复到安全状态\n      setValue([{\n        type: 'paragraph',\n        children: [{ text: '' }]\n      } as ParagraphElement]);\n    }\n  }, []);\n\n  // 切换块类型\n  const toggleBlock = (format: BlockFormatType) => {\n    const isActive = isBlockActive(format);\n    const isList = ['numbered-list', 'bulleted-list'].includes(format);\n\n    Transforms.unwrapNodes(editor, {\n      match: n => \n        SlateElement.isElement(n) && \n        ['numbered-list', 'bulleted-list'].includes(n.type),\n      split: true,\n    });\n\n    if (!isActive && isList) {\n      const block = format === 'numbered-list' \n        ? { type: 'numbered-list' as const, children: [] as ListItemElement[] }\n        : { type: 'bulleted-list' as const, children: [] as ListItemElement[] };\n      Transforms.wrapNodes(editor, block);\n    } else {\n      const newProperties: Partial<SlateElement> = {\n        type: isActive ? 'paragraph' as const : format,\n      };\n      Transforms.setNodes<SlateElement>(editor, newProperties);\n    }\n  };\n\n  // 检查块类型是否激活\n  const isBlockActive = (format: BlockFormatType) => {\n    const [match] = Array.from(\n      Editor.nodes(editor, {\n        match: n =>\n          SlateElement.isElement(n) && n.type === format,\n      })\n    );\n    return !!match;\n  };\n\n  // 渲染元素和叶子节点的回调函数\n  const renderElement = useCallback((props: any) => {\n    const { element, attributes, children } = props;\n    \n    switch (element.type) {\n      case 'paragraph':\n        return <p {...attributes}>{children}</p>;\n      case 'bulleted-list':\n        return <ul {...attributes}>{children}</ul>;\n      case 'numbered-list':\n        return <ol {...attributes}>{children}</ol>;\n      case 'list-item':\n        return <li {...attributes}>{children}</li>;\n      case 'table':\n        return <Table {...props} />;\n      case 'table-row':\n        return <TableRow {...props} />;\n      case 'table-cell':\n        return <TableCell {...props} />;\n      default:\n        return <p {...attributes}>{children}</p>;\n    }\n  }, []);\n\n  const renderLeaf = useCallback((props: RenderLeafProps) => {\n    let style: React.CSSProperties = {};\n    if (props.leaf.bold) style.fontWeight = 'bold';\n    if (props.leaf.italic) style.fontStyle = 'italic';\n    if (props.leaf.underline) style.textDecoration = 'underline';\n\n    return (\n      <span {...props.attributes} style={style}>\n        {props.children}\n      </span>\n    );\n  }, []);\n\n  // 导出功能\n  const handleExport = useCallback((format: 'txt' | 'md' | 'html') => {\n    const text = value.map(n => SlateNode.string(n)).join('\\n');\n    const blob = new Blob([text], { type: 'text/plain;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    a.download = `note-${timestamp}.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [value]);\n\n  // 自动保存钩子\n  useAutoSave(\n    currentNote?.id || null, \n    value, \n    2000, \n    () => console.log('Note saved')\n  );\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [showFindReplace, setShowFindReplace] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n\n  // Add hotkey support\n  useHotkeys('ctrl+f', (e: KeyboardEvent) => {\n    e.preventDefault();\n    setShowFindReplace(true);\n  });\n\n  useHotkeys('ctrl+s', (e: KeyboardEvent) => {\n    e.preventDefault();\n    handleSave();\n  });\n\n  // Add status bar calculations\n  useEffect(() => {\n    const text = value.map(n => Node.string(n)).join('\\n');\n    setWordCount(text.trim().split(/\\s+/).length);\n    setLineCount(value.length);\n  }, [value]);\n\n  // Add find and replace functionality\n  const handleFindReplace = () => {\n    findAndReplace(editor, searchQuery, replaceText);\n  };\n\n  const handleSave = useCallback(() => {\n    if (currentNote?.id) {\n      // 使用 useAutoSave 中的逻辑直接保存\n      dispatch(updateNoteContent({ \n        id: currentNote.id, \n        content: value \n      }));\n      console.log('Note saved manually');\n    }\n  }, [currentNote?.id, value]);\n\n  // 添加新的状态\n  const [fontSize, setFontSize] = useState(16);\n  const [fontFamily, setFontFamily] = useState('Arial');\n\n  const [noteStats, setNoteStats] = useState<NoteStats>({\n    wordCount: 0,\n    characterCount: 0,\n    readingTime: 0,\n    codeBlockCount: 0,\n    tableCount: 0,\n    lastModified: new Date()\n  });\n\n  // Update statistics when content changes\n  useEffect(() => {\n    // 过滤出 CustomElement 类型的节点\n    const elements = value.filter((node): node is CustomElement => \n      'type' in node && typeof node.type === 'string'\n    );\n    \n    const stats = calculateNoteStats(elements);\n    setNoteStats(stats);\n  }, [value]);\n\n  // Add toolbar buttons for code block and table\n  const insertTable = (rows = 3, cols = 3) => {\n    const table: TableElement = {\n      type: 'table',\n      rows,\n      columns: cols,\n      children: Array(rows).fill(0).map((): TableRowElement => ({\n        type: 'table-row',\n        children: Array(cols).fill(0).map((): TableCellElement => ({\n          type: 'table-cell',\n          children: [{ text: '' }]\n        }))\n      }))\n    };\n    Transforms.insertNodes(editor, table);\n  };\n\n  // Add error boundary for content loading\n  useEffect(() => {\n    try {\n      if (currentNote?.content) {\n        const validContent: CustomDescendant[] = Array.isArray(currentNote.content) ? \n          currentNote.content : \n          [{ type: 'paragraph' as const, children: [{ text: '' }] }];\n        setValue(validContent);\n      }\n    } catch (error) {\n      console.error('Error loading note content:', error);\n      setValue([{ type: 'paragraph', children: [{ text: '' }] }]);\n    }\n  }, [currentNote]);\n\n  // Add support for more keyboard shortcuts\n  useHotkeys('ctrl+b', (e: KeyboardEvent) => {\n    e.preventDefault();\n    Editor.addMark(editor, 'bold', true);\n  });\n\n  useHotkeys('ctrl+i', (e: KeyboardEvent) => {\n    e.preventDefault();\n    Editor.addMark(editor, 'italic', true);\n  });\n\n  useHotkeys('ctrl+u', (e: KeyboardEvent) => {\n    e.preventDefault();\n    Editor.addMark(editor, 'underline', true);\n  });\n\n  // Add paste handling\n  const handlePaste = useCallback((event: React.ClipboardEvent) => {\n    event.preventDefault();\n    const text = event.clipboardData.getData('text/plain');\n    const lines = text.split('\\n');\n    \n    if (lines.length > 1) {\n      // Handle multi-line paste with proper typing\n      const nodes: ParagraphElement[] = lines.map(line => ({\n        type: 'paragraph' as const,\n        children: [{ text: line }]\n      }));\n      Editor.insertFragment(editor, nodes);\n    } else {\n      Editor.insertText(editor, text);\n    }\n  }, [editor]);\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <Slate \n        editor={editor} \n        value={value} \n        onChange={handleChange}\n        key={currentNote?.id || 'editor'}\n      >\n        <Toolbar \n          editor={editor}\n          onThemeChange={onThemeChange}\n          onToggleBlock={toggleBlock}\n          isBlockActive={isBlockActive}\n          onExport={handleExport}\n          onFindReplace={() => setShowFindReplace(true)}\n          fontSize={fontSize}\n          fontFamily={fontFamily}\n          onFontSizeChange={setFontSize}\n          onFontFamilyChange={setFontFamily}\n          currentSectionId={currentNote?.sectionId}\n          onInsertTable={insertTable}\n        />\n        {showFindReplace && (\n          <div className=\"border-b p-2 flex gap-2 items-center\">\n            <input\n              type=\"text\"\n              placeholder=\"Find...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"px-2 py-1 border rounded\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Replace with...\"\n              value={replaceText}\n              onChange={(e) => setReplaceText(e.target.value)}\n              className=\"px-2 py-1 border rounded\"\n            />\n            <button\n              onClick={handleFindReplace}\n              className=\"px-3 py-1 bg-blue-500 text-white rounded\"\n            >\n              Replace\n            </button>\n            <button\n              onClick={() => setShowFindReplace(false)}\n              className=\"px-2 py-1\"\n            >\n              ✕\n            </button>\n          </div>\n        )}\n        <Editable \n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"开始你的笔记...\"\n          className=\"flex-1 p-4 overflow-auto prose max-w-none dark:prose-invert\"\n          style={{\n            fontSize: `${fontSize}px`,\n            fontFamily\n          }}\n          onPaste={handlePaste}\n          spellCheck={false}\n          autoFocus={true}\n        />\n        <div className=\"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400 flex justify-between\">\n          <div>\n            Lines: {lineCount} | Words: {wordCount}\n          </div>\n          <div>\n            UTF-8\n          </div>\n        </div>\n      </Slate>\n      \n      {/* Add statistics panel */}\n      <div className=\"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex gap-4\">\n            <span>Words: {noteStats.wordCount}</span>\n            <span>Characters: {noteStats.characterCount}</span>\n            <span>Reading Time: {noteStats.readingTime} min</span>\n          </div>\n          <div className=\"flex gap-4\">\n            <span>Code Blocks: {noteStats.codeBlockCount}</span>\n            <span>Tables: {noteStats.tableCount}</span>\n            <span>Last Modified: {noteStats.lastModified.toLocaleTimeString()}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoteEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}