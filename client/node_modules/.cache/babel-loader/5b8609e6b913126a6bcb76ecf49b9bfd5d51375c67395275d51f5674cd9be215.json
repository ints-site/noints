{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FanYukin\\\\codes\\\\f\\\\noints\\\\client\\\\src\\\\components\\\\Editor\\\\elements\\\\CodeBlock.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'prismjs/components/prism-typescript';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-python';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CodeBlock = ({\n  attributes,\n  children,\n  element\n}) => {\n  _s();\n  const language = element.language || 'typescript';\n  const [content, setContent] = React.useState('');\n  const [copied, setCopied] = React.useState(false);\n  React.useEffect(() => {\n    const code = (children === null || children === void 0 ? void 0 : children.toString()) || '';\n    const highlighted = Prism.highlight(code, Prism.languages[language], language);\n    setContent(highlighted);\n  }, [children, language]);\n  const handleCopy = () => {\n    const code = (children === null || children === void 0 ? void 0 : children.toString()) || '';\n    navigator.clipboard.writeText(code);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n  const handleLanguageChange = newLanguage => {\n    // Update the element's language property\n    // You'll need to implement this through your state management\n  };\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    ...attributes,\n    className: \"relative group bg-gray-900 p-4 rounded-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute right-2 top-2 opacity-0 group-hover:opacity-100 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        contentEditable: false,\n        value: language,\n        onChange: e => handleLanguageChange(e.target.value),\n        className: \"bg-gray-800 text-white text-sm rounded px-2 py-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"typescript\",\n          children: \"TypeScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"javascript\",\n          children: \"JavaScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"python\",\n          children: \"Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"html\",\n          children: \"HTML\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"css\",\n          children: \"CSS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCopy,\n        className: \"bg-gray-800 text-white text-sm rounded px-2 py-1\",\n        children: copied ? 'Copied!' : 'Copy'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n      className: `language-${language}`,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeBlock, \"wxZfyxqKBaXfYDTpi/m06FXRPpI=\");\n_c = CodeBlock;\nvar _c;\n$RefreshReg$(_c, \"CodeBlock\");","map":{"version":3,"names":["React","Prism","jsxDEV","_jsxDEV","CodeBlock","attributes","children","element","_s","language","content","setContent","useState","copied","setCopied","useEffect","code","toString","highlighted","highlight","languages","handleCopy","navigator","clipboard","writeText","setTimeout","handleLanguageChange","newLanguage","className","contentEditable","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/components/Editor/elements/CodeBlock.tsx"],"sourcesContent":["import React from 'react';\r\nimport Prism from 'prismjs';\r\nimport 'prismjs/themes/prism-tomorrow.css';\r\nimport 'prismjs/components/prism-typescript';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-python';\r\n\r\ninterface CodeBlockProps {\r\n  attributes: any;\r\n  children: React.ReactNode;\r\n  element: {\r\n    language?: string;\r\n  };\r\n}\r\n\r\nexport const CodeBlock: React.FC<CodeBlockProps> = ({ attributes, children, element }) => {\r\n  const language = element.language || 'typescript';\r\n  const [content, setContent] = React.useState('');\r\n  const [copied, setCopied] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const code = children?.toString() || '';\r\n    const highlighted = Prism.highlight(\r\n      code,\r\n      Prism.languages[language],\r\n      language\r\n    );\r\n    setContent(highlighted);\r\n  }, [children, language]);\r\n\r\n  const handleCopy = () => {\r\n    const code = children?.toString() || '';\r\n    navigator.clipboard.writeText(code);\r\n    setCopied(true);\r\n    setTimeout(() => setCopied(false), 2000);\r\n  };\r\n\r\n  const handleLanguageChange = (newLanguage: string) => {\r\n    // Update the element's language property\r\n    // You'll need to implement this through your state management\r\n  };\r\n\r\n  return (\r\n    <pre {...attributes} className=\"relative group bg-gray-900 p-4 rounded-lg\">\r\n      <div className=\"absolute right-2 top-2 opacity-0 group-hover:opacity-100 flex gap-2\">\r\n        <select\r\n          contentEditable={false}\r\n          value={language}\r\n          onChange={(e) => handleLanguageChange(e.target.value)}\r\n          className=\"bg-gray-800 text-white text-sm rounded px-2 py-1\"\r\n        >\r\n          <option value=\"typescript\">TypeScript</option>\r\n          <option value=\"javascript\">JavaScript</option>\r\n          <option value=\"python\">Python</option>\r\n          <option value=\"html\">HTML</option>\r\n          <option value=\"css\">CSS</option>\r\n        </select>\r\n        <button\r\n          onClick={handleCopy}\r\n          className=\"bg-gray-800 text-white text-sm rounded px-2 py-1\"\r\n        >\r\n          {copied ? 'Copied!' : 'Copy'}\r\n        </button>\r\n      </div>\r\n      <code className={`language-${language}`}>\r\n        {children}\r\n      </code>\r\n    </pre>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}