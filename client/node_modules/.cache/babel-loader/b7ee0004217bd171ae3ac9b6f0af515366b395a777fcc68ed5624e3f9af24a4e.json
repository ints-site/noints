{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateNoteContent } from '../store/notebookSlice';\nexport const useAutoSave = (noteId, content, delay = 2000, onSave) => {\n  _s();\n  const dispatch = useDispatch();\n  const timeoutRef = useRef();\n  const contentRef = useRef(content);\n  useEffect(() => {\n    contentRef.current = content;\n  }, [content]);\n  useEffect(() => {\n    if (!noteId) return;\n    const saveContent = () => {\n      try {\n        dispatch(updateNoteContent({\n          id: noteId,\n          content: contentRef.current\n        }));\n        onSave === null || onSave === void 0 ? void 0 : onSave();\n      } catch (error) {\n        console.error('Auto-save error:', error);\n      }\n    };\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    timeoutRef.current = setTimeout(saveContent, delay);\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [content, noteId, delay, dispatch, onSave]);\n};\n_s(useAutoSave, \"wXZ4BmOIJmpLnnT5Rlw5MPBw1gA=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useEffect","useRef","useDispatch","updateNoteContent","useAutoSave","noteId","content","delay","onSave","_s","dispatch","timeoutRef","contentRef","current","saveContent","id","error","console","clearTimeout","setTimeout"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/hooks/useAutoSave.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { Descendant } from 'slate';\nimport { useDispatch } from 'react-redux';\nimport { updateNoteContent } from '../store/notebookSlice';\n\nexport const useAutoSave = (\n  noteId: string | null,\n  content: Descendant[],\n  delay: number = 2000,\n  onSave?: () => void\n) => {\n  const dispatch = useDispatch();\n  const timeoutRef = useRef<NodeJS.Timeout>();\n  const contentRef = useRef(content);\n\n  useEffect(() => {\n    contentRef.current = content;\n  }, [content]);\n\n  useEffect(() => {\n    if (!noteId) return;\n\n    const saveContent = () => {\n      try {\n        dispatch(updateNoteContent({ \n          id: noteId, \n          content: contentRef.current \n        }));\n        onSave?.();\n      } catch (error) {\n        console.error('Auto-save error:', error);\n      }\n    };\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(saveContent, delay);\n\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [content, noteId, delay, dispatch, onSave]);\n}; "],"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEzC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,wBAAwB;AAE1D,OAAO,MAAMC,WAAW,GAAGA,CACzBC,MAAqB,EACrBC,OAAqB,EACrBC,KAAa,GAAG,IAAI,EACpBC,MAAmB,KAChB;EAAAC,EAAA;EACH,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,UAAU,GAAGV,MAAM,CAAiB,CAAC;EAC3C,MAAMW,UAAU,GAAGX,MAAM,CAACK,OAAO,CAAC;EAElCN,SAAS,CAAC,MAAM;IACdY,UAAU,CAACC,OAAO,GAAGP,OAAO;EAC9B,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbN,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,MAAM,EAAE;IAEb,MAAMS,WAAW,GAAGA,CAAA,KAAM;MACxB,IAAI;QACFJ,QAAQ,CAACP,iBAAiB,CAAC;UACzBY,EAAE,EAAEV,MAAM;UACVC,OAAO,EAAEM,UAAU,CAACC;QACtB,CAAC,CAAC,CAAC;QACHL,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,CAAC;MACZ,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MAC1C;IACF,CAAC;IAED,IAAIL,UAAU,CAACE,OAAO,EAAE;MACtBK,YAAY,CAACP,UAAU,CAACE,OAAO,CAAC;IAClC;IAEAF,UAAU,CAACE,OAAO,GAAGM,UAAU,CAACL,WAAW,EAAEP,KAAK,CAAC;IAEnD,OAAO,MAAM;MACX,IAAII,UAAU,CAACE,OAAO,EAAE;QACtBK,YAAY,CAACP,UAAU,CAACE,OAAO,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACP,OAAO,EAAED,MAAM,EAAEE,KAAK,EAAEG,QAAQ,EAAEF,MAAM,CAAC,CAAC;AAChD,CAAC;AAACC,EAAA,CAzCWL,WAAW;EAAA,QAMLF,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}