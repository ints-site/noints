{"ast":null,"code":"import { Text } from 'slate';\nexport function calculateNoteStats(nodes) {\n  let wordCount = 0;\n  let characterCount = 0;\n  let codeBlockCount = 0;\n  let tableCount = 0;\n  const countStats = node => {\n    if (Text.isText(node)) {\n      const text = node.text;\n      characterCount += text.length;\n      wordCount += text.trim().split(/\\s+/).filter(Boolean).length;\n    } else if ('type' in node) {\n      if (node.type === 'code-block') codeBlockCount++;\n      if (node.type === 'table') tableCount++;\n    }\n  };\n  const traverseNode = node => {\n    if ('type' in node) {\n      if (node.type === 'code-block') codeBlockCount++;\n      if (node.type === 'table') tableCount++;\n    }\n    if ('children' in node) {\n      node.children.forEach(child => {\n        if (Text.isText(child)) {\n          const text = child.text;\n          characterCount += text.length;\n          wordCount += text.trim().split(/\\s+/).filter(Boolean).length;\n        } else {\n          traverseNode(child);\n        }\n      });\n    }\n  };\n  nodes.forEach(traverseNode);\n  const readingTime = Math.ceil(wordCount / 200);\n  return {\n    wordCount,\n    characterCount,\n    readingTime,\n    codeBlockCount,\n    tableCount,\n    lastModified: new Date()\n  };\n}","map":{"version":3,"names":["Text","calculateNoteStats","nodes","wordCount","characterCount","codeBlockCount","tableCount","countStats","node","isText","text","length","trim","split","filter","Boolean","type","traverseNode","children","forEach","child","readingTime","Math","ceil","lastModified","Date"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/utils/noteStats.ts"],"sourcesContent":["import { Node, Text } from 'slate';\r\nimport { CustomElement, NoteStats } from '../components/Editor/types';\r\n\r\nexport function calculateNoteStats(nodes: CustomElement[]): NoteStats {\r\n  let wordCount = 0;\r\n  let characterCount = 0;\r\n  let codeBlockCount = 0;\r\n  let tableCount = 0;\r\n\r\n  const countStats = (node: Node) => {\r\n    if (Text.isText(node)) {\r\n      const text = node.text;\r\n      characterCount += text.length;\r\n      wordCount += text.trim().split(/\\s+/).filter(Boolean).length;\r\n    } else if ('type' in node) {\r\n      if (node.type === 'code-block') codeBlockCount++;\r\n      if (node.type === 'table') tableCount++;\r\n    }\r\n  };\r\n\r\n  const traverseNode = (node: CustomElement) => {\r\n    if ('type' in node) {\r\n      if (node.type === 'code-block') codeBlockCount++;\r\n      if (node.type === 'table') tableCount++;\r\n    }\r\n    \r\n    if ('children' in node) {\r\n      node.children.forEach(child => {\r\n        if (Text.isText(child)) {\r\n          const text = child.text;\r\n          characterCount += text.length;\r\n          wordCount += text.trim().split(/\\s+/).filter(Boolean).length;\r\n        } else {\r\n          traverseNode(child as CustomElement);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  nodes.forEach(traverseNode);\r\n\r\n  const readingTime = Math.ceil(wordCount / 200);\r\n\r\n  return {\r\n    wordCount,\r\n    characterCount,\r\n    readingTime,\r\n    codeBlockCount,\r\n    tableCount,\r\n    lastModified: new Date()\r\n  };\r\n} "],"mappings":"AAAA,SAAeA,IAAI,QAAQ,OAAO;AAGlC,OAAO,SAASC,kBAAkBA,CAACC,KAAsB,EAAa;EACpE,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIC,cAAc,GAAG,CAAC;EACtB,IAAIC,cAAc,GAAG,CAAC;EACtB,IAAIC,UAAU,GAAG,CAAC;EAElB,MAAMC,UAAU,GAAIC,IAAU,IAAK;IACjC,IAAIR,IAAI,CAACS,MAAM,CAACD,IAAI,CAAC,EAAE;MACrB,MAAME,IAAI,GAAGF,IAAI,CAACE,IAAI;MACtBN,cAAc,IAAIM,IAAI,CAACC,MAAM;MAC7BR,SAAS,IAAIO,IAAI,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACJ,MAAM;IAC9D,CAAC,MAAM,IAAI,MAAM,IAAIH,IAAI,EAAE;MACzB,IAAIA,IAAI,CAACQ,IAAI,KAAK,YAAY,EAAEX,cAAc,EAAE;MAChD,IAAIG,IAAI,CAACQ,IAAI,KAAK,OAAO,EAAEV,UAAU,EAAE;IACzC;EACF,CAAC;EAED,MAAMW,YAAY,GAAIT,IAAmB,IAAK;IAC5C,IAAI,MAAM,IAAIA,IAAI,EAAE;MAClB,IAAIA,IAAI,CAACQ,IAAI,KAAK,YAAY,EAAEX,cAAc,EAAE;MAChD,IAAIG,IAAI,CAACQ,IAAI,KAAK,OAAO,EAAEV,UAAU,EAAE;IACzC;IAEA,IAAI,UAAU,IAAIE,IAAI,EAAE;MACtBA,IAAI,CAACU,QAAQ,CAACC,OAAO,CAACC,KAAK,IAAI;QAC7B,IAAIpB,IAAI,CAACS,MAAM,CAACW,KAAK,CAAC,EAAE;UACtB,MAAMV,IAAI,GAAGU,KAAK,CAACV,IAAI;UACvBN,cAAc,IAAIM,IAAI,CAACC,MAAM;UAC7BR,SAAS,IAAIO,IAAI,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAACJ,MAAM;QAC9D,CAAC,MAAM;UACLM,YAAY,CAACG,KAAsB,CAAC;QACtC;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EAEDlB,KAAK,CAACiB,OAAO,CAACF,YAAY,CAAC;EAE3B,MAAMI,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACpB,SAAS,GAAG,GAAG,CAAC;EAE9C,OAAO;IACLA,SAAS;IACTC,cAAc;IACdiB,WAAW;IACXhB,cAAc;IACdC,UAAU;IACVkB,YAAY,EAAE,IAAIC,IAAI,CAAC;EACzB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}