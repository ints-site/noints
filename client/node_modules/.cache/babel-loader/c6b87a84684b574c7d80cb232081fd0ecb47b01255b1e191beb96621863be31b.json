{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FanYukin\\\\codes\\\\f\\\\noints\\\\client\\\\src\\\\components\\\\Editor\\\\NoteEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport { createEditor, Editor, Element as SlateElement, Node as SlateNode, Transforms } from 'slate';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { findAndReplace } from '../../utils/textOperations';\nimport { Node } from 'slate';\nimport { updateNoteContent } from '../../store/notebookSlice';\n\n// 添加类型定义\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteEditor = ({\n  onThemeChange\n}) => {\n  _s();\n  const dispatch = useDispatch();\n\n  // 获取当前笔记\n  const currentNote = useSelector(state => state.notebooks.currentNote);\n\n  // 使用 useMemo 优化编辑器创建\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n\n  // 初始化编辑器内容\n  const [value, setValue] = useState([{\n    type: 'paragraph',\n    children: [{\n      text: ''\n    }]\n  }]);\n\n  // 切换块类型\n  const toggleBlock = format => {\n    const isActive = isBlockActive(format);\n    const isList = ['numbered-list', 'bulleted-list'].includes(format);\n    Transforms.unwrapNodes(editor, {\n      match: n => SlateElement.isElement(n) && ['numbered-list', 'bulleted-list'].includes(n.type),\n      split: true\n    });\n    const newProperties = {\n      type: isActive ? 'paragraph' : isList ? 'list-item' : format\n    };\n    Transforms.setNodes(editor, newProperties);\n    if (!isActive && isList) {\n      const block = {\n        type: format,\n        children: []\n      };\n      Transforms.wrapNodes(editor, block);\n    }\n  };\n\n  // 检查块类型是否激活\n  const isBlockActive = format => {\n    const [match] = Array.from(Editor.nodes(editor, {\n      match: n => SlateElement.isElement(n) && n.type === format\n    }));\n    return !!match;\n  };\n\n  // 渲染元素和叶子节点的回调函数\n  const renderElement = useCallback(props => {\n    switch (props.element.type) {\n      case 'paragraph':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this);\n      case 'bulleted-list':\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 16\n        }, this);\n      case 'numbered-list':\n        return /*#__PURE__*/_jsxDEV(\"ol\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }, this);\n      case 'list-item':\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          ...props.attributes,\n          children: props.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 16\n        }, this);\n    }\n  }, []);\n  const renderLeaf = useCallback(props => {\n    let style = {};\n    if (props.leaf.bold) style.fontWeight = 'bold';\n    if (props.leaf.italic) style.fontStyle = 'italic';\n    if (props.leaf.underline) style.textDecoration = 'underline';\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      ...props.attributes,\n      style: style,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  }, []);\n\n  // 导出功能\n  const handleExport = useCallback(format => {\n    const text = value.map(n => SlateNode.string(n)).join('\\n');\n    const blob = new Blob([text], {\n      type: 'text/plain;charset=utf-8'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    a.download = `note-${timestamp}.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [value]);\n\n  // 自动保存钩子\n  useAutoSave((currentNote === null || currentNote === void 0 ? void 0 : currentNote.id) || null, value, 2000, () => console.log('Note saved'));\n  const [searchQuery, setSearchQuery] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [showFindReplace, setShowFindReplace] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n\n  // Add hotkey support\n  useHotkeys('ctrl+f', e => {\n    e.preventDefault();\n    setShowFindReplace(true);\n  });\n  useHotkeys('ctrl+s', e => {\n    e.preventDefault();\n    handleSave();\n  });\n\n  // Add status bar calculations\n  useEffect(() => {\n    const text = value.map(n => Node.string(n)).join('\\n');\n    setWordCount(text.trim().split(/\\s+/).length);\n    setLineCount(value.length);\n  }, [value]);\n\n  // Add find and replace functionality\n  const handleFindReplace = () => {\n    findAndReplace(editor, searchQuery, replaceText);\n  };\n  const handleSave = useCallback(() => {\n    if (currentNote !== null && currentNote !== void 0 && currentNote.id) {\n      // 使用 useAutoSave 中的逻辑直接保存\n      dispatch(updateNoteContent({\n        id: currentNote.id,\n        content: value\n      }));\n      console.log('Note saved manually');\n    }\n  }, [currentNote === null || currentNote === void 0 ? void 0 : currentNote.id, value]);\n\n  // 添加新的状态\n  const [fontSize, setFontSize] = useState(16);\n  const [fontFamily, setFontFamily] = useState('Arial');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full flex flex-col\",\n    children: /*#__PURE__*/_jsxDEV(Slate, {\n      editor: editor,\n      value: value,\n      onChange: newValue => setValue(newValue),\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        editor: editor,\n        onThemeChange: onThemeChange,\n        onToggleBlock: toggleBlock,\n        isBlockActive: isBlockActive,\n        onExport: handleExport,\n        onFindReplace: () => setShowFindReplace(true),\n        fontSize: fontSize,\n        fontFamily: fontFamily,\n        onFontSizeChange: setFontSize,\n        onFontFamilyChange: setFontFamily,\n        currentSectionId: currentNote === null || currentNote === void 0 ? void 0 : currentNote.sectionId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), showFindReplace && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-b p-2 flex gap-2 items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Find...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"px-2 py-1 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Replace with...\",\n          value: replaceText,\n          onChange: e => setReplaceText(e.target.value),\n          className: \"px-2 py-1 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFindReplace,\n          className: \"px-3 py-1 bg-blue-500 text-white rounded\",\n          children: \"Replace\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowFindReplace(false),\n          className: \"px-2 py-1\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Editable, {\n        renderElement: renderElement,\n        renderLeaf: renderLeaf,\n        placeholder: \"\\u5F00\\u59CB\\u4F60\\u7684\\u7B14\\u8BB0...\",\n        className: \"flex-1 p-4 overflow-auto prose max-w-none dark:prose-invert\",\n        style: {\n          fontSize: `${fontSize}px`,\n          fontFamily\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400 flex justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Lines: \", lineCount, \" | Words: \", wordCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteEditor, \"T1U8SZQ+52hIf+Lz9VV3Q2Vcbfs=\", false, function () {\n  return [useDispatch, useSelector, useAutoSave, useHotkeys, useHotkeys];\n});\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useMemo","useState","useCallback","useEffect","createEditor","Editor","Element","SlateElement","Node","SlateNode","Transforms","Slate","Editable","withReact","withHistory","useSelector","useDispatch","useAutoSave","Toolbar","useHotkeys","findAndReplace","updateNoteContent","jsxDEV","_jsxDEV","NoteEditor","onThemeChange","_s","dispatch","currentNote","state","notebooks","editor","value","setValue","type","children","text","toggleBlock","format","isActive","isBlockActive","isList","includes","unwrapNodes","match","n","isElement","split","newProperties","setNodes","block","wrapNodes","Array","from","nodes","renderElement","props","element","attributes","fileName","_jsxFileName","lineNumber","columnNumber","renderLeaf","style","leaf","bold","fontWeight","italic","fontStyle","underline","textDecoration","handleExport","map","string","join","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","timestamp","Date","toISOString","replace","download","body","appendChild","click","removeChild","revokeObjectURL","id","console","log","searchQuery","setSearchQuery","replaceText","setReplaceText","showFindReplace","setShowFindReplace","wordCount","setWordCount","lineCount","setLineCount","e","preventDefault","handleSave","trim","length","handleFindReplace","content","fontSize","setFontSize","fontFamily","setFontFamily","className","onChange","newValue","onToggleBlock","onExport","onFindReplace","onFontSizeChange","onFontFamilyChange","currentSectionId","sectionId","placeholder","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/components/Editor/NoteEditor.tsx"],"sourcesContent":["import React, { useMemo, useState, useCallback, useEffect } from 'react';\nimport { \n  createEditor, \n  Descendant, \n  Editor, \n  Element as SlateElement,\n  Node as SlateNode,\n  Transforms\n} from 'slate';\nimport { Slate, Editable, withReact, RenderLeafProps } from 'slate-react';\nimport { withHistory } from 'slate-history';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useAutoSave } from '../../hooks/useAutoSave';\nimport Toolbar from './Toolbar';\nimport { CustomElement, CustomText, BlockFormatType } from './types';\nimport { RootState } from '../../store';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { findAndReplace } from '../../utils/textOperations';\nimport { Node } from 'slate';\nimport { updateNoteContent } from '../../store/notebookSlice';\n\ninterface EditorProps {\n  onThemeChange?: (isDark: boolean) => void;\n}\n\n// 添加类型定义\ninterface KeyboardEvent {\n  preventDefault: () => void;\n}\n\nconst NoteEditor: React.FC<EditorProps> = ({ onThemeChange }) => {\n  const dispatch = useDispatch();\n\n  // 获取当前笔记\n  const currentNote = useSelector((state: RootState) => state.notebooks.currentNote);\n\n  // 使用 useMemo 优化编辑器创建\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n  \n  // 初始化编辑器内容\n  const [value, setValue] = useState<CustomElement[]>([\n    { type: 'paragraph', children: [{ text: '' }] },\n  ]);\n\n  // 切换块类型\n  const toggleBlock = (format: BlockFormatType) => {\n    const isActive = isBlockActive(format);\n    const isList = ['numbered-list', 'bulleted-list'].includes(format);\n\n    Transforms.unwrapNodes(editor, {\n      match: n => \n        SlateElement.isElement(n) && \n        ['numbered-list', 'bulleted-list'].includes(n.type),\n      split: true,\n    });\n\n    const newProperties: Partial<SlateElement> = {\n      type: isActive ? 'paragraph' : isList ? 'list-item' : format,\n    };\n\n    Transforms.setNodes<SlateElement>(editor, newProperties);\n\n    if (!isActive && isList) {\n      const block = { type: format, children: [] };\n      Transforms.wrapNodes(editor, block);\n    }\n  };\n\n  // 检查块类型是否激活\n  const isBlockActive = (format: BlockFormatType) => {\n    const [match] = Array.from(\n      Editor.nodes(editor, {\n        match: n =>\n          SlateElement.isElement(n) && n.type === format,\n      })\n    );\n    return !!match;\n  };\n\n  // 渲染元素和叶子节点的回调函数\n  const renderElement = useCallback((props: any) => {\n    switch (props.element.type) {\n      case 'paragraph':\n        return <p {...props.attributes}>{props.children}</p>;\n      case 'bulleted-list':\n        return <ul {...props.attributes}>{props.children}</ul>;\n      case 'numbered-list':\n        return <ol {...props.attributes}>{props.children}</ol>;\n      case 'list-item':\n        return <li {...props.attributes}>{props.children}</li>;\n      default:\n        return <p {...props.attributes}>{props.children}</p>;\n    }\n  }, []);\n\n  const renderLeaf = useCallback((props: RenderLeafProps) => {\n    let style: React.CSSProperties = {};\n    if (props.leaf.bold) style.fontWeight = 'bold';\n    if (props.leaf.italic) style.fontStyle = 'italic';\n    if (props.leaf.underline) style.textDecoration = 'underline';\n\n    return (\n      <span {...props.attributes} style={style}>\n        {props.children}\n      </span>\n    );\n  }, []);\n\n  // 导出功能\n  const handleExport = useCallback((format: 'txt' | 'md' | 'html') => {\n    const text = value.map(n => SlateNode.string(n)).join('\\n');\n    const blob = new Blob([text], { type: 'text/plain;charset=utf-8' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    a.download = `note-${timestamp}.${format}`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [value]);\n\n  // 自动保存钩子\n  useAutoSave(\n    currentNote?.id || null, \n    value, \n    2000, \n    () => console.log('Note saved')\n  );\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [replaceText, setReplaceText] = useState('');\n  const [showFindReplace, setShowFindReplace] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n  const [lineCount, setLineCount] = useState(0);\n\n  // Add hotkey support\n  useHotkeys('ctrl+f', (e: KeyboardEvent) => {\n    e.preventDefault();\n    setShowFindReplace(true);\n  });\n\n  useHotkeys('ctrl+s', (e: KeyboardEvent) => {\n    e.preventDefault();\n    handleSave();\n  });\n\n  // Add status bar calculations\n  useEffect(() => {\n    const text = value.map(n => Node.string(n)).join('\\n');\n    setWordCount(text.trim().split(/\\s+/).length);\n    setLineCount(value.length);\n  }, [value]);\n\n  // Add find and replace functionality\n  const handleFindReplace = () => {\n    findAndReplace(editor, searchQuery, replaceText);\n  };\n\n  const handleSave = useCallback(() => {\n    if (currentNote?.id) {\n      // 使用 useAutoSave 中的逻辑直接保存\n      dispatch(updateNoteContent({ \n        id: currentNote.id, \n        content: value \n      }));\n      console.log('Note saved manually');\n    }\n  }, [currentNote?.id, value]);\n\n  // 添加新的状态\n  const [fontSize, setFontSize] = useState(16);\n  const [fontFamily, setFontFamily] = useState('Arial');\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <Slate \n        editor={editor} \n        value={value} \n        onChange={(newValue) => setValue(newValue as CustomElement[])}\n      >\n        <Toolbar \n          editor={editor}\n          onThemeChange={onThemeChange}\n          onToggleBlock={toggleBlock}\n          isBlockActive={isBlockActive}\n          onExport={handleExport}\n          onFindReplace={() => setShowFindReplace(true)}\n          fontSize={fontSize}\n          fontFamily={fontFamily}\n          onFontSizeChange={setFontSize}\n          onFontFamilyChange={setFontFamily}\n          currentSectionId={currentNote?.sectionId}\n        />\n        {showFindReplace && (\n          <div className=\"border-b p-2 flex gap-2 items-center\">\n            <input\n              type=\"text\"\n              placeholder=\"Find...\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              className=\"px-2 py-1 border rounded\"\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Replace with...\"\n              value={replaceText}\n              onChange={(e) => setReplaceText(e.target.value)}\n              className=\"px-2 py-1 border rounded\"\n            />\n            <button\n              onClick={handleFindReplace}\n              className=\"px-3 py-1 bg-blue-500 text-white rounded\"\n            >\n              Replace\n            </button>\n            <button\n              onClick={() => setShowFindReplace(false)}\n              className=\"px-2 py-1\"\n            >\n              ✕\n            </button>\n          </div>\n        )}\n        <Editable \n          renderElement={renderElement}\n          renderLeaf={renderLeaf}\n          placeholder=\"开始你的笔记...\"\n          className=\"flex-1 p-4 overflow-auto prose max-w-none dark:prose-invert\"\n          style={{\n            fontSize: `${fontSize}px`,\n            fontFamily\n          }}\n        />\n        <div className=\"border-t px-4 py-2 text-sm text-gray-600 dark:text-gray-400 flex justify-between\">\n          <div>\n            Lines: {lineCount} | Words: {wordCount}\n          </div>\n          <div>\n            UTF-8\n          </div>\n        </div>\n      </Slate>\n    </div>\n  );\n};\n\nexport default NoteEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}