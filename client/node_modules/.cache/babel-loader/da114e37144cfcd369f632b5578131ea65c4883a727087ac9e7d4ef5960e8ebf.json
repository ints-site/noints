{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  notebooks: [],\n  currentNotebook: null,\n  currentSection: null,\n  currentNote: null,\n  isLoading: false,\n  error: null\n};\nconst notebookSlice = createSlice({\n  name: 'notebook',\n  initialState,\n  reducers: {\n    setNotebooks: (state, action) => {\n      state.notebooks = action.payload;\n    },\n    setCurrentNotebook: (state, action) => {\n      state.currentNotebook = action.payload;\n    },\n    setCurrentSection: (state, action) => {\n      state.currentSection = action.payload;\n    },\n    setCurrentNote: (state, action) => {\n      state.currentNote = action.payload;\n    }\n  }\n});\nexport const {\n  setNotebooks,\n  setCurrentNotebook,\n  setCurrentSection,\n  setCurrentNote\n} = notebookSlice.actions;\nexport default notebookSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","notebooks","currentNotebook","currentSection","currentNote","isLoading","error","notebookSlice","name","reducers","setNotebooks","state","action","payload","setCurrentNotebook","setCurrentSection","setCurrentNote","actions","reducer"],"sources":["C:/Users/FanYukin/codes/f/noints/client/src/store/notebookSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Notebook, Section, Note } from '../../../shared/types';\r\n\r\ninterface NotebookState {\r\n  notebooks: Notebook[];\r\n  currentNotebook: Notebook | null;\r\n  currentSection: Section | null;\r\n  currentNote: Note | null;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: NotebookState = {\r\n  notebooks: [],\r\n  currentNotebook: null,\r\n  currentSection: null,\r\n  currentNote: null,\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nconst notebookSlice = createSlice({\r\n  name: 'notebook',\r\n  initialState,\r\n  reducers: {\r\n    setNotebooks: (state, action: PayloadAction<Notebook[]>) => {\r\n      state.notebooks = action.payload;\r\n    },\r\n    setCurrentNotebook: (state, action: PayloadAction<Notebook>) => {\r\n      state.currentNotebook = action.payload;\r\n    },\r\n    setCurrentSection: (state, action: PayloadAction<Section>) => {\r\n      state.currentSection = action.payload;\r\n    },\r\n    setCurrentNote: (state, action: PayloadAction<Note>) => {\r\n      state.currentNote = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { \r\n  setNotebooks, \r\n  setCurrentNotebook,\r\n  setCurrentSection,\r\n  setCurrentNote\r\n} = notebookSlice.actions;\r\n\r\nexport default notebookSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAY7D,MAAMC,YAA2B,GAAG;EAClCC,SAAS,EAAE,EAAE;EACbC,eAAe,EAAE,IAAI;EACrBC,cAAc,EAAE,IAAI;EACpBC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGR,WAAW,CAAC;EAChCS,IAAI,EAAE,UAAU;EAChBR,YAAY;EACZS,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAiC,KAAK;MAC1DD,KAAK,CAACV,SAAS,GAAGW,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,kBAAkB,EAAEA,CAACH,KAAK,EAAEC,MAA+B,KAAK;MAC9DD,KAAK,CAACT,eAAe,GAAGU,MAAM,CAACC,OAAO;IACxC,CAAC;IACDE,iBAAiB,EAAEA,CAACJ,KAAK,EAAEC,MAA8B,KAAK;MAC5DD,KAAK,CAACR,cAAc,GAAGS,MAAM,CAACC,OAAO;IACvC,CAAC;IACDG,cAAc,EAAEA,CAACL,KAAK,EAAEC,MAA2B,KAAK;MACtDD,KAAK,CAACP,WAAW,GAAGQ,MAAM,CAACC,OAAO;IACpC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXH,YAAY;EACZI,kBAAkB;EAClBC,iBAAiB;EACjBC;AACF,CAAC,GAAGT,aAAa,CAACU,OAAO;AAEzB,eAAeV,aAAa,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}